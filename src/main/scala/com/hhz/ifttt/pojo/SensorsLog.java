/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hhz.ifttt.pojo;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class SensorsLog extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -734212382705357334L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SensorsLog\",\"namespace\":\"com.hhz.ifttt.pojo\",\"fields\":[{\"name\":\"hashvalue\",\"type\":\"string\"},{\"name\":\"act_from\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"push_id\",\"type\":\"string\"},{\"name\":\"vid\",\"type\":\"string\"},{\"name\":\"uid\",\"type\":\"string\"},{\"name\":\"event_type\",\"type\":\"string\"},{\"name\":\"obj_type\",\"type\":\"string\"},{\"name\":\"tag\",\"type\":\"string\"},{\"name\":\"part_id\",\"type\":\"string\"},{\"name\":\"keyword\",\"type\":\"string\"},{\"name\":\"day\",\"type\":\"int\"},{\"name\":\"obj_id\",\"type\":\"string\"},{\"name\":\"os\",\"type\":\"string\"},{\"name\":\"banner_id\",\"type\":\"string\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"search_type\",\"type\":\"string\"},{\"name\":\"last_source\",\"type\":\"string\"},{\"name\":\"latest_referrer\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"long\"},{\"name\":\"page\",\"type\":\"string\"},{\"name\":\"category\",\"type\":\"string\"},{\"name\":\"act_params\",\"type\":\"string\"},{\"name\":\"did\",\"type\":\"string\"},{\"name\":\"properties\",\"type\":\"string\"},{\"name\":\"part_name\",\"type\":\"string\"},{\"name\":\"line\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SensorsLog> ENCODER =
      new BinaryMessageEncoder<SensorsLog>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SensorsLog> DECODER =
      new BinaryMessageDecoder<SensorsLog>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<SensorsLog> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<SensorsLog> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SensorsLog>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this SensorsLog to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a SensorsLog from a ByteBuffer. */
  public static SensorsLog fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence hashvalue;
  @Deprecated public CharSequence act_from;
  @Deprecated public CharSequence app_version;
  @Deprecated public CharSequence push_id;
  @Deprecated public CharSequence vid;
  @Deprecated public CharSequence uid;
  @Deprecated public CharSequence event_type;
  @Deprecated public CharSequence obj_type;
  @Deprecated public CharSequence tag;
  @Deprecated public CharSequence part_id;
  @Deprecated public CharSequence keyword;
  @Deprecated public int day;
  @Deprecated public CharSequence obj_id;
  @Deprecated public CharSequence os;
  @Deprecated public CharSequence banner_id;
  @Deprecated public CharSequence ip;
  @Deprecated public CharSequence search_type;
  @Deprecated public CharSequence last_source;
  @Deprecated public CharSequence latest_referrer;
  @Deprecated public long time;
  @Deprecated public CharSequence page;
  @Deprecated public CharSequence category;
  @Deprecated public CharSequence act_params;
  @Deprecated public CharSequence did;
  @Deprecated public CharSequence properties;
  @Deprecated public CharSequence part_name;
  @Deprecated public CharSequence line;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SensorsLog() {}

  /**
   * All-args constructor.
   * @param hashvalue The new value for hashvalue
   * @param act_from The new value for act_from
   * @param app_version The new value for app_version
   * @param push_id The new value for push_id
   * @param vid The new value for vid
   * @param uid The new value for uid
   * @param event_type The new value for event_type
   * @param obj_type The new value for obj_type
   * @param tag The new value for tag
   * @param part_id The new value for part_id
   * @param keyword The new value for keyword
   * @param day The new value for day
   * @param obj_id The new value for obj_id
   * @param os The new value for os
   * @param banner_id The new value for banner_id
   * @param ip The new value for ip
   * @param search_type The new value for search_type
   * @param last_source The new value for last_source
   * @param latest_referrer The new value for latest_referrer
   * @param time The new value for time
   * @param page The new value for page
   * @param category The new value for category
   * @param act_params The new value for act_params
   * @param did The new value for did
   * @param properties The new value for properties
   * @param part_name The new value for part_name
   * @param line The new value for line
   */
  public SensorsLog(CharSequence hashvalue, CharSequence act_from, CharSequence app_version, CharSequence push_id, CharSequence vid, CharSequence uid, CharSequence event_type, CharSequence obj_type, CharSequence tag, CharSequence part_id, CharSequence keyword, Integer day, CharSequence obj_id, CharSequence os, CharSequence banner_id, CharSequence ip, CharSequence search_type, CharSequence last_source, CharSequence latest_referrer, Long time, CharSequence page, CharSequence category, CharSequence act_params, CharSequence did, CharSequence properties, CharSequence part_name, CharSequence line) {
    this.hashvalue = hashvalue;
    this.act_from = act_from;
    this.app_version = app_version;
    this.push_id = push_id;
    this.vid = vid;
    this.uid = uid;
    this.event_type = event_type;
    this.obj_type = obj_type;
    this.tag = tag;
    this.part_id = part_id;
    this.keyword = keyword;
    this.day = day;
    this.obj_id = obj_id;
    this.os = os;
    this.banner_id = banner_id;
    this.ip = ip;
    this.search_type = search_type;
    this.last_source = last_source;
    this.latest_referrer = latest_referrer;
    this.time = time;
    this.page = page;
    this.category = category;
    this.act_params = act_params;
    this.did = did;
    this.properties = properties;
    this.part_name = part_name;
    this.line = line;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return hashvalue;
    case 1: return act_from;
    case 2: return app_version;
    case 3: return push_id;
    case 4: return vid;
    case 5: return uid;
    case 6: return event_type;
    case 7: return obj_type;
    case 8: return tag;
    case 9: return part_id;
    case 10: return keyword;
    case 11: return day;
    case 12: return obj_id;
    case 13: return os;
    case 14: return banner_id;
    case 15: return ip;
    case 16: return search_type;
    case 17: return last_source;
    case 18: return latest_referrer;
    case 19: return time;
    case 20: return page;
    case 21: return category;
    case 22: return act_params;
    case 23: return did;
    case 24: return properties;
    case 25: return part_name;
    case 26: return line;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: hashvalue = (CharSequence)value$; break;
    case 1: act_from = (CharSequence)value$; break;
    case 2: app_version = (CharSequence)value$; break;
    case 3: push_id = (CharSequence)value$; break;
    case 4: vid = (CharSequence)value$; break;
    case 5: uid = (CharSequence)value$; break;
    case 6: event_type = (CharSequence)value$; break;
    case 7: obj_type = (CharSequence)value$; break;
    case 8: tag = (CharSequence)value$; break;
    case 9: part_id = (CharSequence)value$; break;
    case 10: keyword = (CharSequence)value$; break;
    case 11: day = (Integer)value$; break;
    case 12: obj_id = (CharSequence)value$; break;
    case 13: os = (CharSequence)value$; break;
    case 14: banner_id = (CharSequence)value$; break;
    case 15: ip = (CharSequence)value$; break;
    case 16: search_type = (CharSequence)value$; break;
    case 17: last_source = (CharSequence)value$; break;
    case 18: latest_referrer = (CharSequence)value$; break;
    case 19: time = (Long)value$; break;
    case 20: page = (CharSequence)value$; break;
    case 21: category = (CharSequence)value$; break;
    case 22: act_params = (CharSequence)value$; break;
    case 23: did = (CharSequence)value$; break;
    case 24: properties = (CharSequence)value$; break;
    case 25: part_name = (CharSequence)value$; break;
    case 26: line = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'hashvalue' field.
   * @return The value of the 'hashvalue' field.
   */
  public CharSequence getHashvalue() {
    return hashvalue;
  }

  /**
   * Sets the value of the 'hashvalue' field.
   * @param value the value to set.
   */
  public void setHashvalue(CharSequence value) {
    this.hashvalue = value;
  }

  /**
   * Gets the value of the 'act_from' field.
   * @return The value of the 'act_from' field.
   */
  public CharSequence getActFrom() {
    return act_from;
  }

  /**
   * Sets the value of the 'act_from' field.
   * @param value the value to set.
   */
  public void setActFrom(CharSequence value) {
    this.act_from = value;
  }

  /**
   * Gets the value of the 'app_version' field.
   * @return The value of the 'app_version' field.
   */
  public CharSequence getAppVersion() {
    return app_version;
  }

  /**
   * Sets the value of the 'app_version' field.
   * @param value the value to set.
   */
  public void setAppVersion(CharSequence value) {
    this.app_version = value;
  }

  /**
   * Gets the value of the 'push_id' field.
   * @return The value of the 'push_id' field.
   */
  public CharSequence getPushId() {
    return push_id;
  }

  /**
   * Sets the value of the 'push_id' field.
   * @param value the value to set.
   */
  public void setPushId(CharSequence value) {
    this.push_id = value;
  }

  /**
   * Gets the value of the 'vid' field.
   * @return The value of the 'vid' field.
   */
  public CharSequence getVid() {
    return vid;
  }

  /**
   * Sets the value of the 'vid' field.
   * @param value the value to set.
   */
  public void setVid(CharSequence value) {
    this.vid = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * @return The value of the 'uid' field.
   */
  public CharSequence getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * @param value the value to set.
   */
  public void setUid(CharSequence value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'event_type' field.
   * @return The value of the 'event_type' field.
   */
  public CharSequence getEventType() {
    return event_type;
  }

  /**
   * Sets the value of the 'event_type' field.
   * @param value the value to set.
   */
  public void setEventType(CharSequence value) {
    this.event_type = value;
  }

  /**
   * Gets the value of the 'obj_type' field.
   * @return The value of the 'obj_type' field.
   */
  public CharSequence getObjType() {
    return obj_type;
  }

  /**
   * Sets the value of the 'obj_type' field.
   * @param value the value to set.
   */
  public void setObjType(CharSequence value) {
    this.obj_type = value;
  }

  /**
   * Gets the value of the 'tag' field.
   * @return The value of the 'tag' field.
   */
  public CharSequence getTag() {
    return tag;
  }

  /**
   * Sets the value of the 'tag' field.
   * @param value the value to set.
   */
  public void setTag(CharSequence value) {
    this.tag = value;
  }

  /**
   * Gets the value of the 'part_id' field.
   * @return The value of the 'part_id' field.
   */
  public CharSequence getPartId() {
    return part_id;
  }

  /**
   * Sets the value of the 'part_id' field.
   * @param value the value to set.
   */
  public void setPartId(CharSequence value) {
    this.part_id = value;
  }

  /**
   * Gets the value of the 'keyword' field.
   * @return The value of the 'keyword' field.
   */
  public CharSequence getKeyword() {
    return keyword;
  }

  /**
   * Sets the value of the 'keyword' field.
   * @param value the value to set.
   */
  public void setKeyword(CharSequence value) {
    this.keyword = value;
  }

  /**
   * Gets the value of the 'day' field.
   * @return The value of the 'day' field.
   */
  public Integer getDay() {
    return day;
  }

  /**
   * Sets the value of the 'day' field.
   * @param value the value to set.
   */
  public void setDay(Integer value) {
    this.day = value;
  }

  /**
   * Gets the value of the 'obj_id' field.
   * @return The value of the 'obj_id' field.
   */
  public CharSequence getObjId() {
    return obj_id;
  }

  /**
   * Sets the value of the 'obj_id' field.
   * @param value the value to set.
   */
  public void setObjId(CharSequence value) {
    this.obj_id = value;
  }

  /**
   * Gets the value of the 'os' field.
   * @return The value of the 'os' field.
   */
  public CharSequence getOs() {
    return os;
  }

  /**
   * Sets the value of the 'os' field.
   * @param value the value to set.
   */
  public void setOs(CharSequence value) {
    this.os = value;
  }

  /**
   * Gets the value of the 'banner_id' field.
   * @return The value of the 'banner_id' field.
   */
  public CharSequence getBannerId() {
    return banner_id;
  }

  /**
   * Sets the value of the 'banner_id' field.
   * @param value the value to set.
   */
  public void setBannerId(CharSequence value) {
    this.banner_id = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'search_type' field.
   * @return The value of the 'search_type' field.
   */
  public CharSequence getSearchType() {
    return search_type;
  }

  /**
   * Sets the value of the 'search_type' field.
   * @param value the value to set.
   */
  public void setSearchType(CharSequence value) {
    this.search_type = value;
  }

  /**
   * Gets the value of the 'last_source' field.
   * @return The value of the 'last_source' field.
   */
  public CharSequence getLastSource() {
    return last_source;
  }

  /**
   * Sets the value of the 'last_source' field.
   * @param value the value to set.
   */
  public void setLastSource(CharSequence value) {
    this.last_source = value;
  }

  /**
   * Gets the value of the 'latest_referrer' field.
   * @return The value of the 'latest_referrer' field.
   */
  public CharSequence getLatestReferrer() {
    return latest_referrer;
  }

  /**
   * Sets the value of the 'latest_referrer' field.
   * @param value the value to set.
   */
  public void setLatestReferrer(CharSequence value) {
    this.latest_referrer = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public Long getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(Long value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'page' field.
   * @return The value of the 'page' field.
   */
  public CharSequence getPage() {
    return page;
  }

  /**
   * Sets the value of the 'page' field.
   * @param value the value to set.
   */
  public void setPage(CharSequence value) {
    this.page = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public CharSequence getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'act_params' field.
   * @return The value of the 'act_params' field.
   */
  public CharSequence getActParams() {
    return act_params;
  }

  /**
   * Sets the value of the 'act_params' field.
   * @param value the value to set.
   */
  public void setActParams(CharSequence value) {
    this.act_params = value;
  }

  /**
   * Gets the value of the 'did' field.
   * @return The value of the 'did' field.
   */
  public CharSequence getDid() {
    return did;
  }

  /**
   * Sets the value of the 'did' field.
   * @param value the value to set.
   */
  public void setDid(CharSequence value) {
    this.did = value;
  }

  /**
   * Gets the value of the 'properties' field.
   * @return The value of the 'properties' field.
   */
  public CharSequence getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(CharSequence value) {
    this.properties = value;
  }

  /**
   * Gets the value of the 'part_name' field.
   * @return The value of the 'part_name' field.
   */
  public CharSequence getPartName() {
    return part_name;
  }

  /**
   * Sets the value of the 'part_name' field.
   * @param value the value to set.
   */
  public void setPartName(CharSequence value) {
    this.part_name = value;
  }

  /**
   * Gets the value of the 'line' field.
   * @return The value of the 'line' field.
   */
  public CharSequence getLine() {
    return line;
  }

  /**
   * Sets the value of the 'line' field.
   * @param value the value to set.
   */
  public void setLine(CharSequence value) {
    this.line = value;
  }

  /**
   * Creates a new SensorsLog RecordBuilder.
   * @return A new SensorsLog RecordBuilder
   */
  public static SensorsLog.Builder newBuilder() {
    return new SensorsLog.Builder();
  }

  /**
   * Creates a new SensorsLog RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SensorsLog RecordBuilder
   */
  public static SensorsLog.Builder newBuilder(SensorsLog.Builder other) {
    return new SensorsLog.Builder(other);
  }

  /**
   * Creates a new SensorsLog RecordBuilder by copying an existing SensorsLog instance.
   * @param other The existing instance to copy.
   * @return A new SensorsLog RecordBuilder
   */
  public static SensorsLog.Builder newBuilder(SensorsLog other) {
    return new SensorsLog.Builder(other);
  }

  /**
   * RecordBuilder for SensorsLog instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SensorsLog>
    implements org.apache.avro.data.RecordBuilder<SensorsLog> {

    private CharSequence hashvalue;
    private CharSequence act_from;
    private CharSequence app_version;
    private CharSequence push_id;
    private CharSequence vid;
    private CharSequence uid;
    private CharSequence event_type;
    private CharSequence obj_type;
    private CharSequence tag;
    private CharSequence part_id;
    private CharSequence keyword;
    private int day;
    private CharSequence obj_id;
    private CharSequence os;
    private CharSequence banner_id;
    private CharSequence ip;
    private CharSequence search_type;
    private CharSequence last_source;
    private CharSequence latest_referrer;
    private long time;
    private CharSequence page;
    private CharSequence category;
    private CharSequence act_params;
    private CharSequence did;
    private CharSequence properties;
    private CharSequence part_name;
    private CharSequence line;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(SensorsLog.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.hashvalue)) {
        this.hashvalue = data().deepCopy(fields()[0].schema(), other.hashvalue);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.act_from)) {
        this.act_from = data().deepCopy(fields()[1].schema(), other.act_from);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.app_version)) {
        this.app_version = data().deepCopy(fields()[2].schema(), other.app_version);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.push_id)) {
        this.push_id = data().deepCopy(fields()[3].schema(), other.push_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vid)) {
        this.vid = data().deepCopy(fields()[4].schema(), other.vid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uid)) {
        this.uid = data().deepCopy(fields()[5].schema(), other.uid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_type)) {
        this.event_type = data().deepCopy(fields()[6].schema(), other.event_type);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[7].schema(), other.obj_type);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tag)) {
        this.tag = data().deepCopy(fields()[8].schema(), other.tag);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.part_id)) {
        this.part_id = data().deepCopy(fields()[9].schema(), other.part_id);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.keyword)) {
        this.keyword = data().deepCopy(fields()[10].schema(), other.keyword);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.day)) {
        this.day = data().deepCopy(fields()[11].schema(), other.day);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[12].schema(), other.obj_id);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.os)) {
        this.os = data().deepCopy(fields()[13].schema(), other.os);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.banner_id)) {
        this.banner_id = data().deepCopy(fields()[14].schema(), other.banner_id);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.ip)) {
        this.ip = data().deepCopy(fields()[15].schema(), other.ip);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.search_type)) {
        this.search_type = data().deepCopy(fields()[16].schema(), other.search_type);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.last_source)) {
        this.last_source = data().deepCopy(fields()[17].schema(), other.last_source);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.latest_referrer)) {
        this.latest_referrer = data().deepCopy(fields()[18].schema(), other.latest_referrer);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.time)) {
        this.time = data().deepCopy(fields()[19].schema(), other.time);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.page)) {
        this.page = data().deepCopy(fields()[20].schema(), other.page);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.category)) {
        this.category = data().deepCopy(fields()[21].schema(), other.category);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.act_params)) {
        this.act_params = data().deepCopy(fields()[22].schema(), other.act_params);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.did)) {
        this.did = data().deepCopy(fields()[23].schema(), other.did);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.properties)) {
        this.properties = data().deepCopy(fields()[24].schema(), other.properties);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.part_name)) {
        this.part_name = data().deepCopy(fields()[25].schema(), other.part_name);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.line)) {
        this.line = data().deepCopy(fields()[26].schema(), other.line);
        fieldSetFlags()[26] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing SensorsLog instance
     * @param other The existing instance to copy.
     */
    private Builder(SensorsLog other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.hashvalue)) {
        this.hashvalue = data().deepCopy(fields()[0].schema(), other.hashvalue);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.act_from)) {
        this.act_from = data().deepCopy(fields()[1].schema(), other.act_from);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.app_version)) {
        this.app_version = data().deepCopy(fields()[2].schema(), other.app_version);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.push_id)) {
        this.push_id = data().deepCopy(fields()[3].schema(), other.push_id);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.vid)) {
        this.vid = data().deepCopy(fields()[4].schema(), other.vid);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.uid)) {
        this.uid = data().deepCopy(fields()[5].schema(), other.uid);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.event_type)) {
        this.event_type = data().deepCopy(fields()[6].schema(), other.event_type);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[7].schema(), other.obj_type);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.tag)) {
        this.tag = data().deepCopy(fields()[8].schema(), other.tag);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.part_id)) {
        this.part_id = data().deepCopy(fields()[9].schema(), other.part_id);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.keyword)) {
        this.keyword = data().deepCopy(fields()[10].schema(), other.keyword);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.day)) {
        this.day = data().deepCopy(fields()[11].schema(), other.day);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[12].schema(), other.obj_id);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.os)) {
        this.os = data().deepCopy(fields()[13].schema(), other.os);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.banner_id)) {
        this.banner_id = data().deepCopy(fields()[14].schema(), other.banner_id);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.ip)) {
        this.ip = data().deepCopy(fields()[15].schema(), other.ip);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.search_type)) {
        this.search_type = data().deepCopy(fields()[16].schema(), other.search_type);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.last_source)) {
        this.last_source = data().deepCopy(fields()[17].schema(), other.last_source);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.latest_referrer)) {
        this.latest_referrer = data().deepCopy(fields()[18].schema(), other.latest_referrer);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.time)) {
        this.time = data().deepCopy(fields()[19].schema(), other.time);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.page)) {
        this.page = data().deepCopy(fields()[20].schema(), other.page);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.category)) {
        this.category = data().deepCopy(fields()[21].schema(), other.category);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.act_params)) {
        this.act_params = data().deepCopy(fields()[22].schema(), other.act_params);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.did)) {
        this.did = data().deepCopy(fields()[23].schema(), other.did);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.properties)) {
        this.properties = data().deepCopy(fields()[24].schema(), other.properties);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.part_name)) {
        this.part_name = data().deepCopy(fields()[25].schema(), other.part_name);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.line)) {
        this.line = data().deepCopy(fields()[26].schema(), other.line);
        fieldSetFlags()[26] = true;
      }
    }

    /**
      * Gets the value of the 'hashvalue' field.
      * @return The value.
      */
    public CharSequence getHashvalue() {
      return hashvalue;
    }

    /**
      * Sets the value of the 'hashvalue' field.
      * @param value The value of 'hashvalue'.
      * @return This builder.
      */
    public SensorsLog.Builder setHashvalue(CharSequence value) {
      validate(fields()[0], value);
      this.hashvalue = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'hashvalue' field has been set.
      * @return True if the 'hashvalue' field has been set, false otherwise.
      */
    public boolean hasHashvalue() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'hashvalue' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearHashvalue() {
      hashvalue = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'act_from' field.
      * @return The value.
      */
    public CharSequence getActFrom() {
      return act_from;
    }

    /**
      * Sets the value of the 'act_from' field.
      * @param value The value of 'act_from'.
      * @return This builder.
      */
    public SensorsLog.Builder setActFrom(CharSequence value) {
      validate(fields()[1], value);
      this.act_from = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'act_from' field has been set.
      * @return True if the 'act_from' field has been set, false otherwise.
      */
    public boolean hasActFrom() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'act_from' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearActFrom() {
      act_from = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'app_version' field.
      * @return The value.
      */
    public CharSequence getAppVersion() {
      return app_version;
    }

    /**
      * Sets the value of the 'app_version' field.
      * @param value The value of 'app_version'.
      * @return This builder.
      */
    public SensorsLog.Builder setAppVersion(CharSequence value) {
      validate(fields()[2], value);
      this.app_version = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'app_version' field has been set.
      * @return True if the 'app_version' field has been set, false otherwise.
      */
    public boolean hasAppVersion() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'app_version' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearAppVersion() {
      app_version = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'push_id' field.
      * @return The value.
      */
    public CharSequence getPushId() {
      return push_id;
    }

    /**
      * Sets the value of the 'push_id' field.
      * @param value The value of 'push_id'.
      * @return This builder.
      */
    public SensorsLog.Builder setPushId(CharSequence value) {
      validate(fields()[3], value);
      this.push_id = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'push_id' field has been set.
      * @return True if the 'push_id' field has been set, false otherwise.
      */
    public boolean hasPushId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'push_id' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearPushId() {
      push_id = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'vid' field.
      * @return The value.
      */
    public CharSequence getVid() {
      return vid;
    }

    /**
      * Sets the value of the 'vid' field.
      * @param value The value of 'vid'.
      * @return This builder.
      */
    public SensorsLog.Builder setVid(CharSequence value) {
      validate(fields()[4], value);
      this.vid = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'vid' field has been set.
      * @return True if the 'vid' field has been set, false otherwise.
      */
    public boolean hasVid() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'vid' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearVid() {
      vid = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'uid' field.
      * @return The value.
      */
    public CharSequence getUid() {
      return uid;
    }

    /**
      * Sets the value of the 'uid' field.
      * @param value The value of 'uid'.
      * @return This builder.
      */
    public SensorsLog.Builder setUid(CharSequence value) {
      validate(fields()[5], value);
      this.uid = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'uid' field has been set.
      * @return True if the 'uid' field has been set, false otherwise.
      */
    public boolean hasUid() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'uid' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearUid() {
      uid = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'event_type' field.
      * @return The value.
      */
    public CharSequence getEventType() {
      return event_type;
    }

    /**
      * Sets the value of the 'event_type' field.
      * @param value The value of 'event_type'.
      * @return This builder.
      */
    public SensorsLog.Builder setEventType(CharSequence value) {
      validate(fields()[6], value);
      this.event_type = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'event_type' field has been set.
      * @return True if the 'event_type' field has been set, false otherwise.
      */
    public boolean hasEventType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'event_type' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearEventType() {
      event_type = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_type' field.
      * @return The value.
      */
    public CharSequence getObjType() {
      return obj_type;
    }

    /**
      * Sets the value of the 'obj_type' field.
      * @param value The value of 'obj_type'.
      * @return This builder.
      */
    public SensorsLog.Builder setObjType(CharSequence value) {
      validate(fields()[7], value);
      this.obj_type = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_type' field has been set.
      * @return True if the 'obj_type' field has been set, false otherwise.
      */
    public boolean hasObjType() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'obj_type' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearObjType() {
      obj_type = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'tag' field.
      * @return The value.
      */
    public CharSequence getTag() {
      return tag;
    }

    /**
      * Sets the value of the 'tag' field.
      * @param value The value of 'tag'.
      * @return This builder.
      */
    public SensorsLog.Builder setTag(CharSequence value) {
      validate(fields()[8], value);
      this.tag = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'tag' field has been set.
      * @return True if the 'tag' field has been set, false otherwise.
      */
    public boolean hasTag() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'tag' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearTag() {
      tag = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'part_id' field.
      * @return The value.
      */
    public CharSequence getPartId() {
      return part_id;
    }

    /**
      * Sets the value of the 'part_id' field.
      * @param value The value of 'part_id'.
      * @return This builder.
      */
    public SensorsLog.Builder setPartId(CharSequence value) {
      validate(fields()[9], value);
      this.part_id = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'part_id' field has been set.
      * @return True if the 'part_id' field has been set, false otherwise.
      */
    public boolean hasPartId() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'part_id' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearPartId() {
      part_id = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'keyword' field.
      * @return The value.
      */
    public CharSequence getKeyword() {
      return keyword;
    }

    /**
      * Sets the value of the 'keyword' field.
      * @param value The value of 'keyword'.
      * @return This builder.
      */
    public SensorsLog.Builder setKeyword(CharSequence value) {
      validate(fields()[10], value);
      this.keyword = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'keyword' field has been set.
      * @return True if the 'keyword' field has been set, false otherwise.
      */
    public boolean hasKeyword() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'keyword' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearKeyword() {
      keyword = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'day' field.
      * @return The value.
      */
    public Integer getDay() {
      return day;
    }

    /**
      * Sets the value of the 'day' field.
      * @param value The value of 'day'.
      * @return This builder.
      */
    public SensorsLog.Builder setDay(int value) {
      validate(fields()[11], value);
      this.day = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'day' field has been set.
      * @return True if the 'day' field has been set, false otherwise.
      */
    public boolean hasDay() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'day' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearDay() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_id' field.
      * @return The value.
      */
    public CharSequence getObjId() {
      return obj_id;
    }

    /**
      * Sets the value of the 'obj_id' field.
      * @param value The value of 'obj_id'.
      * @return This builder.
      */
    public SensorsLog.Builder setObjId(CharSequence value) {
      validate(fields()[12], value);
      this.obj_id = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_id' field has been set.
      * @return True if the 'obj_id' field has been set, false otherwise.
      */
    public boolean hasObjId() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'obj_id' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearObjId() {
      obj_id = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'os' field.
      * @return The value.
      */
    public CharSequence getOs() {
      return os;
    }

    /**
      * Sets the value of the 'os' field.
      * @param value The value of 'os'.
      * @return This builder.
      */
    public SensorsLog.Builder setOs(CharSequence value) {
      validate(fields()[13], value);
      this.os = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'os' field has been set.
      * @return True if the 'os' field has been set, false otherwise.
      */
    public boolean hasOs() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'os' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearOs() {
      os = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'banner_id' field.
      * @return The value.
      */
    public CharSequence getBannerId() {
      return banner_id;
    }

    /**
      * Sets the value of the 'banner_id' field.
      * @param value The value of 'banner_id'.
      * @return This builder.
      */
    public SensorsLog.Builder setBannerId(CharSequence value) {
      validate(fields()[14], value);
      this.banner_id = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'banner_id' field has been set.
      * @return True if the 'banner_id' field has been set, false otherwise.
      */
    public boolean hasBannerId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'banner_id' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearBannerId() {
      banner_id = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public SensorsLog.Builder setIp(CharSequence value) {
      validate(fields()[15], value);
      this.ip = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearIp() {
      ip = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'search_type' field.
      * @return The value.
      */
    public CharSequence getSearchType() {
      return search_type;
    }

    /**
      * Sets the value of the 'search_type' field.
      * @param value The value of 'search_type'.
      * @return This builder.
      */
    public SensorsLog.Builder setSearchType(CharSequence value) {
      validate(fields()[16], value);
      this.search_type = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'search_type' field has been set.
      * @return True if the 'search_type' field has been set, false otherwise.
      */
    public boolean hasSearchType() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'search_type' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearSearchType() {
      search_type = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_source' field.
      * @return The value.
      */
    public CharSequence getLastSource() {
      return last_source;
    }

    /**
      * Sets the value of the 'last_source' field.
      * @param value The value of 'last_source'.
      * @return This builder.
      */
    public SensorsLog.Builder setLastSource(CharSequence value) {
      validate(fields()[17], value);
      this.last_source = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'last_source' field has been set.
      * @return True if the 'last_source' field has been set, false otherwise.
      */
    public boolean hasLastSource() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'last_source' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearLastSource() {
      last_source = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'latest_referrer' field.
      * @return The value.
      */
    public CharSequence getLatestReferrer() {
      return latest_referrer;
    }

    /**
      * Sets the value of the 'latest_referrer' field.
      * @param value The value of 'latest_referrer'.
      * @return This builder.
      */
    public SensorsLog.Builder setLatestReferrer(CharSequence value) {
      validate(fields()[18], value);
      this.latest_referrer = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'latest_referrer' field has been set.
      * @return True if the 'latest_referrer' field has been set, false otherwise.
      */
    public boolean hasLatestReferrer() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'latest_referrer' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearLatestReferrer() {
      latest_referrer = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public Long getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public SensorsLog.Builder setTime(long value) {
      validate(fields()[19], value);
      this.time = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearTime() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'page' field.
      * @return The value.
      */
    public CharSequence getPage() {
      return page;
    }

    /**
      * Sets the value of the 'page' field.
      * @param value The value of 'page'.
      * @return This builder.
      */
    public SensorsLog.Builder setPage(CharSequence value) {
      validate(fields()[20], value);
      this.page = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'page' field has been set.
      * @return True if the 'page' field has been set, false otherwise.
      */
    public boolean hasPage() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'page' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearPage() {
      page = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public CharSequence getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public SensorsLog.Builder setCategory(CharSequence value) {
      validate(fields()[21], value);
      this.category = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearCategory() {
      category = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'act_params' field.
      * @return The value.
      */
    public CharSequence getActParams() {
      return act_params;
    }

    /**
      * Sets the value of the 'act_params' field.
      * @param value The value of 'act_params'.
      * @return This builder.
      */
    public SensorsLog.Builder setActParams(CharSequence value) {
      validate(fields()[22], value);
      this.act_params = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'act_params' field has been set.
      * @return True if the 'act_params' field has been set, false otherwise.
      */
    public boolean hasActParams() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'act_params' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearActParams() {
      act_params = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'did' field.
      * @return The value.
      */
    public CharSequence getDid() {
      return did;
    }

    /**
      * Sets the value of the 'did' field.
      * @param value The value of 'did'.
      * @return This builder.
      */
    public SensorsLog.Builder setDid(CharSequence value) {
      validate(fields()[23], value);
      this.did = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'did' field has been set.
      * @return True if the 'did' field has been set, false otherwise.
      */
    public boolean hasDid() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'did' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearDid() {
      did = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'properties' field.
      * @return The value.
      */
    public CharSequence getProperties() {
      return properties;
    }

    /**
      * Sets the value of the 'properties' field.
      * @param value The value of 'properties'.
      * @return This builder.
      */
    public SensorsLog.Builder setProperties(CharSequence value) {
      validate(fields()[24], value);
      this.properties = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'properties' field has been set.
      * @return True if the 'properties' field has been set, false otherwise.
      */
    public boolean hasProperties() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'properties' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearProperties() {
      properties = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'part_name' field.
      * @return The value.
      */
    public CharSequence getPartName() {
      return part_name;
    }

    /**
      * Sets the value of the 'part_name' field.
      * @param value The value of 'part_name'.
      * @return This builder.
      */
    public SensorsLog.Builder setPartName(CharSequence value) {
      validate(fields()[25], value);
      this.part_name = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'part_name' field has been set.
      * @return True if the 'part_name' field has been set, false otherwise.
      */
    public boolean hasPartName() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'part_name' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearPartName() {
      part_name = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'line' field.
      * @return The value.
      */
    public CharSequence getLine() {
      return line;
    }

    /**
      * Sets the value of the 'line' field.
      * @param value The value of 'line'.
      * @return This builder.
      */
    public SensorsLog.Builder setLine(CharSequence value) {
      validate(fields()[26], value);
      this.line = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'line' field has been set.
      * @return True if the 'line' field has been set, false otherwise.
      */
    public boolean hasLine() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'line' field.
      * @return This builder.
      */
    public SensorsLog.Builder clearLine() {
      line = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SensorsLog build() {
      try {
        SensorsLog record = new SensorsLog();
        record.hashvalue = fieldSetFlags()[0] ? this.hashvalue : (CharSequence) defaultValue(fields()[0]);
        record.act_from = fieldSetFlags()[1] ? this.act_from : (CharSequence) defaultValue(fields()[1]);
        record.app_version = fieldSetFlags()[2] ? this.app_version : (CharSequence) defaultValue(fields()[2]);
        record.push_id = fieldSetFlags()[3] ? this.push_id : (CharSequence) defaultValue(fields()[3]);
        record.vid = fieldSetFlags()[4] ? this.vid : (CharSequence) defaultValue(fields()[4]);
        record.uid = fieldSetFlags()[5] ? this.uid : (CharSequence) defaultValue(fields()[5]);
        record.event_type = fieldSetFlags()[6] ? this.event_type : (CharSequence) defaultValue(fields()[6]);
        record.obj_type = fieldSetFlags()[7] ? this.obj_type : (CharSequence) defaultValue(fields()[7]);
        record.tag = fieldSetFlags()[8] ? this.tag : (CharSequence) defaultValue(fields()[8]);
        record.part_id = fieldSetFlags()[9] ? this.part_id : (CharSequence) defaultValue(fields()[9]);
        record.keyword = fieldSetFlags()[10] ? this.keyword : (CharSequence) defaultValue(fields()[10]);
        record.day = fieldSetFlags()[11] ? this.day : (Integer) defaultValue(fields()[11]);
        record.obj_id = fieldSetFlags()[12] ? this.obj_id : (CharSequence) defaultValue(fields()[12]);
        record.os = fieldSetFlags()[13] ? this.os : (CharSequence) defaultValue(fields()[13]);
        record.banner_id = fieldSetFlags()[14] ? this.banner_id : (CharSequence) defaultValue(fields()[14]);
        record.ip = fieldSetFlags()[15] ? this.ip : (CharSequence) defaultValue(fields()[15]);
        record.search_type = fieldSetFlags()[16] ? this.search_type : (CharSequence) defaultValue(fields()[16]);
        record.last_source = fieldSetFlags()[17] ? this.last_source : (CharSequence) defaultValue(fields()[17]);
        record.latest_referrer = fieldSetFlags()[18] ? this.latest_referrer : (CharSequence) defaultValue(fields()[18]);
        record.time = fieldSetFlags()[19] ? this.time : (Long) defaultValue(fields()[19]);
        record.page = fieldSetFlags()[20] ? this.page : (CharSequence) defaultValue(fields()[20]);
        record.category = fieldSetFlags()[21] ? this.category : (CharSequence) defaultValue(fields()[21]);
        record.act_params = fieldSetFlags()[22] ? this.act_params : (CharSequence) defaultValue(fields()[22]);
        record.did = fieldSetFlags()[23] ? this.did : (CharSequence) defaultValue(fields()[23]);
        record.properties = fieldSetFlags()[24] ? this.properties : (CharSequence) defaultValue(fields()[24]);
        record.part_name = fieldSetFlags()[25] ? this.part_name : (CharSequence) defaultValue(fields()[25]);
        record.line = fieldSetFlags()[26] ? this.line : (CharSequence) defaultValue(fields()[26]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SensorsLog>
    WRITER$ = (org.apache.avro.io.DatumWriter<SensorsLog>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SensorsLog>
    READER$ = (org.apache.avro.io.DatumReader<SensorsLog>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
