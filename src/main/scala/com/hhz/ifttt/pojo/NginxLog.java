/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hhz.ifttt.pojo;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class NginxLog extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -533483754228720089L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NginxLog\",\"namespace\":\"com.hhz.ifttt.pojo\",\"fields\":[{\"name\":\"hash_value\",\"type\":\"string\"},{\"name\":\"remote_addr\",\"type\":\"string\"},{\"name\":\"country\",\"type\":\"string\"},{\"name\":\"province\",\"type\":\"string\"},{\"name\":\"city\",\"type\":\"string\"},{\"name\":\"remote_user\",\"type\":\"string\"},{\"name\":\"time\",\"type\":\"string\"},{\"name\":\"method\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"string\"},{\"name\":\"protocol\",\"type\":\"string\"},{\"name\":\"status\",\"type\":\"int\"},{\"name\":\"body_bytes_sent\",\"type\":\"string\"},{\"name\":\"request_time\",\"type\":\"string\"},{\"name\":\"upstream_response_time\",\"type\":\"string\"},{\"name\":\"http_referer\",\"type\":\"string\"},{\"name\":\"uid\",\"type\":\"int\"},{\"name\":\"vid\",\"type\":\"string\"},{\"name\":\"ovid\",\"type\":\"string\"},{\"name\":\"did\",\"type\":\"string\"},{\"name\":\"device_type\",\"type\":\"string\"},{\"name\":\"app_version\",\"type\":\"string\"},{\"name\":\"user_agent\",\"type\":\"string\"},{\"name\":\"http_x_forwarded_for\",\"type\":\"string\"},{\"name\":\"host\",\"type\":\"string\"},{\"name\":\"day\",\"type\":\"int\"},{\"name\":\"source\",\"type\":\"string\"},{\"name\":\"beat_hostname\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<NginxLog> ENCODER =
      new BinaryMessageEncoder<NginxLog>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<NginxLog> DECODER =
      new BinaryMessageDecoder<NginxLog>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<NginxLog> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<NginxLog> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<NginxLog>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this NginxLog to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a NginxLog from a ByteBuffer. */
  public static NginxLog fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence hash_value;
  @Deprecated public CharSequence remote_addr;
  @Deprecated public CharSequence country;
  @Deprecated public CharSequence province;
  @Deprecated public CharSequence city;
  @Deprecated public CharSequence remote_user;
  @Deprecated public CharSequence time;
  @Deprecated public CharSequence method;
  @Deprecated public CharSequence url;
  @Deprecated public CharSequence params;
  @Deprecated public CharSequence protocol;
  @Deprecated public int status;
  @Deprecated public CharSequence body_bytes_sent;
  @Deprecated public CharSequence request_time;
  @Deprecated public CharSequence upstream_response_time;
  @Deprecated public CharSequence http_referer;
  @Deprecated public int uid;
  @Deprecated public CharSequence vid;
  @Deprecated public CharSequence ovid;
  @Deprecated public CharSequence did;
  @Deprecated public CharSequence device_type;
  @Deprecated public CharSequence app_version;
  @Deprecated public CharSequence user_agent;
  @Deprecated public CharSequence http_x_forwarded_for;
  @Deprecated public CharSequence host;
  @Deprecated public int day;
  @Deprecated public CharSequence source;
  @Deprecated public CharSequence beat_hostname;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NginxLog() {}

  /**
   * All-args constructor.
   * @param hash_value The new value for hash_value
   * @param remote_addr The new value for remote_addr
   * @param country The new value for country
   * @param province The new value for province
   * @param city The new value for city
   * @param remote_user The new value for remote_user
   * @param time The new value for time
   * @param method The new value for method
   * @param url The new value for url
   * @param params The new value for params
   * @param protocol The new value for protocol
   * @param status The new value for status
   * @param body_bytes_sent The new value for body_bytes_sent
   * @param request_time The new value for request_time
   * @param upstream_response_time The new value for upstream_response_time
   * @param http_referer The new value for http_referer
   * @param uid The new value for uid
   * @param vid The new value for vid
   * @param ovid The new value for ovid
   * @param did The new value for did
   * @param device_type The new value for device_type
   * @param app_version The new value for app_version
   * @param user_agent The new value for user_agent
   * @param http_x_forwarded_for The new value for http_x_forwarded_for
   * @param host The new value for host
   * @param day The new value for day
   * @param source The new value for source
   * @param beat_hostname The new value for beat_hostname
   */
  public NginxLog(CharSequence hash_value, CharSequence remote_addr, CharSequence country, CharSequence province, CharSequence city, CharSequence remote_user, CharSequence time, CharSequence method, CharSequence url, CharSequence params, CharSequence protocol, Integer status, CharSequence body_bytes_sent, CharSequence request_time, CharSequence upstream_response_time, CharSequence http_referer, Integer uid, CharSequence vid, CharSequence ovid, CharSequence did, CharSequence device_type, CharSequence app_version, CharSequence user_agent, CharSequence http_x_forwarded_for, CharSequence host, Integer day, CharSequence source, CharSequence beat_hostname) {
    this.hash_value = hash_value;
    this.remote_addr = remote_addr;
    this.country = country;
    this.province = province;
    this.city = city;
    this.remote_user = remote_user;
    this.time = time;
    this.method = method;
    this.url = url;
    this.params = params;
    this.protocol = protocol;
    this.status = status;
    this.body_bytes_sent = body_bytes_sent;
    this.request_time = request_time;
    this.upstream_response_time = upstream_response_time;
    this.http_referer = http_referer;
    this.uid = uid;
    this.vid = vid;
    this.ovid = ovid;
    this.did = did;
    this.device_type = device_type;
    this.app_version = app_version;
    this.user_agent = user_agent;
    this.http_x_forwarded_for = http_x_forwarded_for;
    this.host = host;
    this.day = day;
    this.source = source;
    this.beat_hostname = beat_hostname;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return hash_value;
    case 1: return remote_addr;
    case 2: return country;
    case 3: return province;
    case 4: return city;
    case 5: return remote_user;
    case 6: return time;
    case 7: return method;
    case 8: return url;
    case 9: return params;
    case 10: return protocol;
    case 11: return status;
    case 12: return body_bytes_sent;
    case 13: return request_time;
    case 14: return upstream_response_time;
    case 15: return http_referer;
    case 16: return uid;
    case 17: return vid;
    case 18: return ovid;
    case 19: return did;
    case 20: return device_type;
    case 21: return app_version;
    case 22: return user_agent;
    case 23: return http_x_forwarded_for;
    case 24: return host;
    case 25: return day;
    case 26: return source;
    case 27: return beat_hostname;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: hash_value = (CharSequence)value$; break;
    case 1: remote_addr = (CharSequence)value$; break;
    case 2: country = (CharSequence)value$; break;
    case 3: province = (CharSequence)value$; break;
    case 4: city = (CharSequence)value$; break;
    case 5: remote_user = (CharSequence)value$; break;
    case 6: time = (CharSequence)value$; break;
    case 7: method = (CharSequence)value$; break;
    case 8: url = (CharSequence)value$; break;
    case 9: params = (CharSequence)value$; break;
    case 10: protocol = (CharSequence)value$; break;
    case 11: status = (Integer)value$; break;
    case 12: body_bytes_sent = (CharSequence)value$; break;
    case 13: request_time = (CharSequence)value$; break;
    case 14: upstream_response_time = (CharSequence)value$; break;
    case 15: http_referer = (CharSequence)value$; break;
    case 16: uid = (Integer)value$; break;
    case 17: vid = (CharSequence)value$; break;
    case 18: ovid = (CharSequence)value$; break;
    case 19: did = (CharSequence)value$; break;
    case 20: device_type = (CharSequence)value$; break;
    case 21: app_version = (CharSequence)value$; break;
    case 22: user_agent = (CharSequence)value$; break;
    case 23: http_x_forwarded_for = (CharSequence)value$; break;
    case 24: host = (CharSequence)value$; break;
    case 25: day = (Integer)value$; break;
    case 26: source = (CharSequence)value$; break;
    case 27: beat_hostname = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'hash_value' field.
   * @return The value of the 'hash_value' field.
   */
  public CharSequence getHashValue() {
    return hash_value;
  }

  /**
   * Sets the value of the 'hash_value' field.
   * @param value the value to set.
   */
  public void setHashValue(CharSequence value) {
    this.hash_value = value;
  }

  /**
   * Gets the value of the 'remote_addr' field.
   * @return The value of the 'remote_addr' field.
   */
  public CharSequence getRemoteAddr() {
    return remote_addr;
  }

  /**
   * Sets the value of the 'remote_addr' field.
   * @param value the value to set.
   */
  public void setRemoteAddr(CharSequence value) {
    this.remote_addr = value;
  }

  /**
   * Gets the value of the 'country' field.
   * @return The value of the 'country' field.
   */
  public CharSequence getCountry() {
    return country;
  }

  /**
   * Sets the value of the 'country' field.
   * @param value the value to set.
   */
  public void setCountry(CharSequence value) {
    this.country = value;
  }

  /**
   * Gets the value of the 'province' field.
   * @return The value of the 'province' field.
   */
  public CharSequence getProvince() {
    return province;
  }

  /**
   * Sets the value of the 'province' field.
   * @param value the value to set.
   */
  public void setProvince(CharSequence value) {
    this.province = value;
  }

  /**
   * Gets the value of the 'city' field.
   * @return The value of the 'city' field.
   */
  public CharSequence getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'remote_user' field.
   * @return The value of the 'remote_user' field.
   */
  public CharSequence getRemoteUser() {
    return remote_user;
  }

  /**
   * Sets the value of the 'remote_user' field.
   * @param value the value to set.
   */
  public void setRemoteUser(CharSequence value) {
    this.remote_user = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public CharSequence getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(CharSequence value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'method' field.
   * @return The value of the 'method' field.
   */
  public CharSequence getMethod() {
    return method;
  }

  /**
   * Sets the value of the 'method' field.
   * @param value the value to set.
   */
  public void setMethod(CharSequence value) {
    this.method = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'params' field.
   * @return The value of the 'params' field.
   */
  public CharSequence getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * @param value the value to set.
   */
  public void setParams(CharSequence value) {
    this.params = value;
  }

  /**
   * Gets the value of the 'protocol' field.
   * @return The value of the 'protocol' field.
   */
  public CharSequence getProtocol() {
    return protocol;
  }

  /**
   * Sets the value of the 'protocol' field.
   * @param value the value to set.
   */
  public void setProtocol(CharSequence value) {
    this.protocol = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public Integer getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(Integer value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'body_bytes_sent' field.
   * @return The value of the 'body_bytes_sent' field.
   */
  public CharSequence getBodyBytesSent() {
    return body_bytes_sent;
  }

  /**
   * Sets the value of the 'body_bytes_sent' field.
   * @param value the value to set.
   */
  public void setBodyBytesSent(CharSequence value) {
    this.body_bytes_sent = value;
  }

  /**
   * Gets the value of the 'request_time' field.
   * @return The value of the 'request_time' field.
   */
  public CharSequence getRequestTime() {
    return request_time;
  }

  /**
   * Sets the value of the 'request_time' field.
   * @param value the value to set.
   */
  public void setRequestTime(CharSequence value) {
    this.request_time = value;
  }

  /**
   * Gets the value of the 'upstream_response_time' field.
   * @return The value of the 'upstream_response_time' field.
   */
  public CharSequence getUpstreamResponseTime() {
    return upstream_response_time;
  }

  /**
   * Sets the value of the 'upstream_response_time' field.
   * @param value the value to set.
   */
  public void setUpstreamResponseTime(CharSequence value) {
    this.upstream_response_time = value;
  }

  /**
   * Gets the value of the 'http_referer' field.
   * @return The value of the 'http_referer' field.
   */
  public CharSequence getHttpReferer() {
    return http_referer;
  }

  /**
   * Sets the value of the 'http_referer' field.
   * @param value the value to set.
   */
  public void setHttpReferer(CharSequence value) {
    this.http_referer = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * @return The value of the 'uid' field.
   */
  public Integer getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * @param value the value to set.
   */
  public void setUid(Integer value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'vid' field.
   * @return The value of the 'vid' field.
   */
  public CharSequence getVid() {
    return vid;
  }

  /**
   * Sets the value of the 'vid' field.
   * @param value the value to set.
   */
  public void setVid(CharSequence value) {
    this.vid = value;
  }

  /**
   * Gets the value of the 'ovid' field.
   * @return The value of the 'ovid' field.
   */
  public CharSequence getOvid() {
    return ovid;
  }

  /**
   * Sets the value of the 'ovid' field.
   * @param value the value to set.
   */
  public void setOvid(CharSequence value) {
    this.ovid = value;
  }

  /**
   * Gets the value of the 'did' field.
   * @return The value of the 'did' field.
   */
  public CharSequence getDid() {
    return did;
  }

  /**
   * Sets the value of the 'did' field.
   * @param value the value to set.
   */
  public void setDid(CharSequence value) {
    this.did = value;
  }

  /**
   * Gets the value of the 'device_type' field.
   * @return The value of the 'device_type' field.
   */
  public CharSequence getDeviceType() {
    return device_type;
  }

  /**
   * Sets the value of the 'device_type' field.
   * @param value the value to set.
   */
  public void setDeviceType(CharSequence value) {
    this.device_type = value;
  }

  /**
   * Gets the value of the 'app_version' field.
   * @return The value of the 'app_version' field.
   */
  public CharSequence getAppVersion() {
    return app_version;
  }

  /**
   * Sets the value of the 'app_version' field.
   * @param value the value to set.
   */
  public void setAppVersion(CharSequence value) {
    this.app_version = value;
  }

  /**
   * Gets the value of the 'user_agent' field.
   * @return The value of the 'user_agent' field.
   */
  public CharSequence getUserAgent() {
    return user_agent;
  }

  /**
   * Sets the value of the 'user_agent' field.
   * @param value the value to set.
   */
  public void setUserAgent(CharSequence value) {
    this.user_agent = value;
  }

  /**
   * Gets the value of the 'http_x_forwarded_for' field.
   * @return The value of the 'http_x_forwarded_for' field.
   */
  public CharSequence getHttpXForwardedFor() {
    return http_x_forwarded_for;
  }

  /**
   * Sets the value of the 'http_x_forwarded_for' field.
   * @param value the value to set.
   */
  public void setHttpXForwardedFor(CharSequence value) {
    this.http_x_forwarded_for = value;
  }

  /**
   * Gets the value of the 'host' field.
   * @return The value of the 'host' field.
   */
  public CharSequence getHost() {
    return host;
  }

  /**
   * Sets the value of the 'host' field.
   * @param value the value to set.
   */
  public void setHost(CharSequence value) {
    this.host = value;
  }

  /**
   * Gets the value of the 'day' field.
   * @return The value of the 'day' field.
   */
  public Integer getDay() {
    return day;
  }

  /**
   * Sets the value of the 'day' field.
   * @param value the value to set.
   */
  public void setDay(Integer value) {
    this.day = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'beat_hostname' field.
   * @return The value of the 'beat_hostname' field.
   */
  public CharSequence getBeatHostname() {
    return beat_hostname;
  }

  /**
   * Sets the value of the 'beat_hostname' field.
   * @param value the value to set.
   */
  public void setBeatHostname(CharSequence value) {
    this.beat_hostname = value;
  }

  /**
   * Creates a new NginxLog RecordBuilder.
   * @return A new NginxLog RecordBuilder
   */
  public static com.hhz.ifttt.pojo.NginxLog.Builder newBuilder() {
    return new com.hhz.ifttt.pojo.NginxLog.Builder();
  }

  /**
   * Creates a new NginxLog RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NginxLog RecordBuilder
   */
  public static com.hhz.ifttt.pojo.NginxLog.Builder newBuilder(com.hhz.ifttt.pojo.NginxLog.Builder other) {
    return new com.hhz.ifttt.pojo.NginxLog.Builder(other);
  }

  /**
   * Creates a new NginxLog RecordBuilder by copying an existing NginxLog instance.
   * @param other The existing instance to copy.
   * @return A new NginxLog RecordBuilder
   */
  public static com.hhz.ifttt.pojo.NginxLog.Builder newBuilder(com.hhz.ifttt.pojo.NginxLog other) {
    return new com.hhz.ifttt.pojo.NginxLog.Builder(other);
  }

  /**
   * RecordBuilder for NginxLog instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NginxLog>
    implements org.apache.avro.data.RecordBuilder<NginxLog> {

    private CharSequence hash_value;
    private CharSequence remote_addr;
    private CharSequence country;
    private CharSequence province;
    private CharSequence city;
    private CharSequence remote_user;
    private CharSequence time;
    private CharSequence method;
    private CharSequence url;
    private CharSequence params;
    private CharSequence protocol;
    private int status;
    private CharSequence body_bytes_sent;
    private CharSequence request_time;
    private CharSequence upstream_response_time;
    private CharSequence http_referer;
    private int uid;
    private CharSequence vid;
    private CharSequence ovid;
    private CharSequence did;
    private CharSequence device_type;
    private CharSequence app_version;
    private CharSequence user_agent;
    private CharSequence http_x_forwarded_for;
    private CharSequence host;
    private int day;
    private CharSequence source;
    private CharSequence beat_hostname;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.hhz.ifttt.pojo.NginxLog.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.hash_value)) {
        this.hash_value = data().deepCopy(fields()[0].schema(), other.hash_value);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.remote_addr)) {
        this.remote_addr = data().deepCopy(fields()[1].schema(), other.remote_addr);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.country)) {
        this.country = data().deepCopy(fields()[2].schema(), other.country);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.province)) {
        this.province = data().deepCopy(fields()[3].schema(), other.province);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.remote_user)) {
        this.remote_user = data().deepCopy(fields()[5].schema(), other.remote_user);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.time)) {
        this.time = data().deepCopy(fields()[6].schema(), other.time);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.method)) {
        this.method = data().deepCopy(fields()[7].schema(), other.method);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.url)) {
        this.url = data().deepCopy(fields()[8].schema(), other.url);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.params)) {
        this.params = data().deepCopy(fields()[9].schema(), other.params);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.protocol)) {
        this.protocol = data().deepCopy(fields()[10].schema(), other.protocol);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.body_bytes_sent)) {
        this.body_bytes_sent = data().deepCopy(fields()[12].schema(), other.body_bytes_sent);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.request_time)) {
        this.request_time = data().deepCopy(fields()[13].schema(), other.request_time);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.upstream_response_time)) {
        this.upstream_response_time = data().deepCopy(fields()[14].schema(), other.upstream_response_time);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.http_referer)) {
        this.http_referer = data().deepCopy(fields()[15].schema(), other.http_referer);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.uid)) {
        this.uid = data().deepCopy(fields()[16].schema(), other.uid);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.vid)) {
        this.vid = data().deepCopy(fields()[17].schema(), other.vid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.ovid)) {
        this.ovid = data().deepCopy(fields()[18].schema(), other.ovid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.did)) {
        this.did = data().deepCopy(fields()[19].schema(), other.did);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.device_type)) {
        this.device_type = data().deepCopy(fields()[20].schema(), other.device_type);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.app_version)) {
        this.app_version = data().deepCopy(fields()[21].schema(), other.app_version);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.user_agent)) {
        this.user_agent = data().deepCopy(fields()[22].schema(), other.user_agent);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.http_x_forwarded_for)) {
        this.http_x_forwarded_for = data().deepCopy(fields()[23].schema(), other.http_x_forwarded_for);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.host)) {
        this.host = data().deepCopy(fields()[24].schema(), other.host);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.day)) {
        this.day = data().deepCopy(fields()[25].schema(), other.day);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.source)) {
        this.source = data().deepCopy(fields()[26].schema(), other.source);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.beat_hostname)) {
        this.beat_hostname = data().deepCopy(fields()[27].schema(), other.beat_hostname);
        fieldSetFlags()[27] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing NginxLog instance
     * @param other The existing instance to copy.
     */
    private Builder(com.hhz.ifttt.pojo.NginxLog other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.hash_value)) {
        this.hash_value = data().deepCopy(fields()[0].schema(), other.hash_value);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.remote_addr)) {
        this.remote_addr = data().deepCopy(fields()[1].schema(), other.remote_addr);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.country)) {
        this.country = data().deepCopy(fields()[2].schema(), other.country);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.province)) {
        this.province = data().deepCopy(fields()[3].schema(), other.province);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.city)) {
        this.city = data().deepCopy(fields()[4].schema(), other.city);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.remote_user)) {
        this.remote_user = data().deepCopy(fields()[5].schema(), other.remote_user);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.time)) {
        this.time = data().deepCopy(fields()[6].schema(), other.time);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.method)) {
        this.method = data().deepCopy(fields()[7].schema(), other.method);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.url)) {
        this.url = data().deepCopy(fields()[8].schema(), other.url);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.params)) {
        this.params = data().deepCopy(fields()[9].schema(), other.params);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.protocol)) {
        this.protocol = data().deepCopy(fields()[10].schema(), other.protocol);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.status)) {
        this.status = data().deepCopy(fields()[11].schema(), other.status);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.body_bytes_sent)) {
        this.body_bytes_sent = data().deepCopy(fields()[12].schema(), other.body_bytes_sent);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.request_time)) {
        this.request_time = data().deepCopy(fields()[13].schema(), other.request_time);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.upstream_response_time)) {
        this.upstream_response_time = data().deepCopy(fields()[14].schema(), other.upstream_response_time);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.http_referer)) {
        this.http_referer = data().deepCopy(fields()[15].schema(), other.http_referer);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.uid)) {
        this.uid = data().deepCopy(fields()[16].schema(), other.uid);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.vid)) {
        this.vid = data().deepCopy(fields()[17].schema(), other.vid);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.ovid)) {
        this.ovid = data().deepCopy(fields()[18].schema(), other.ovid);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.did)) {
        this.did = data().deepCopy(fields()[19].schema(), other.did);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.device_type)) {
        this.device_type = data().deepCopy(fields()[20].schema(), other.device_type);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.app_version)) {
        this.app_version = data().deepCopy(fields()[21].schema(), other.app_version);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.user_agent)) {
        this.user_agent = data().deepCopy(fields()[22].schema(), other.user_agent);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.http_x_forwarded_for)) {
        this.http_x_forwarded_for = data().deepCopy(fields()[23].schema(), other.http_x_forwarded_for);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.host)) {
        this.host = data().deepCopy(fields()[24].schema(), other.host);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.day)) {
        this.day = data().deepCopy(fields()[25].schema(), other.day);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.source)) {
        this.source = data().deepCopy(fields()[26].schema(), other.source);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.beat_hostname)) {
        this.beat_hostname = data().deepCopy(fields()[27].schema(), other.beat_hostname);
        fieldSetFlags()[27] = true;
      }
    }

    /**
      * Gets the value of the 'hash_value' field.
      * @return The value.
      */
    public CharSequence getHashValue() {
      return hash_value;
    }

    /**
      * Sets the value of the 'hash_value' field.
      * @param value The value of 'hash_value'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setHashValue(CharSequence value) {
      validate(fields()[0], value);
      this.hash_value = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'hash_value' field has been set.
      * @return True if the 'hash_value' field has been set, false otherwise.
      */
    public boolean hasHashValue() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'hash_value' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearHashValue() {
      hash_value = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'remote_addr' field.
      * @return The value.
      */
    public CharSequence getRemoteAddr() {
      return remote_addr;
    }

    /**
      * Sets the value of the 'remote_addr' field.
      * @param value The value of 'remote_addr'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setRemoteAddr(CharSequence value) {
      validate(fields()[1], value);
      this.remote_addr = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'remote_addr' field has been set.
      * @return True if the 'remote_addr' field has been set, false otherwise.
      */
    public boolean hasRemoteAddr() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'remote_addr' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearRemoteAddr() {
      remote_addr = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'country' field.
      * @return The value.
      */
    public CharSequence getCountry() {
      return country;
    }

    /**
      * Sets the value of the 'country' field.
      * @param value The value of 'country'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setCountry(CharSequence value) {
      validate(fields()[2], value);
      this.country = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'country' field has been set.
      * @return True if the 'country' field has been set, false otherwise.
      */
    public boolean hasCountry() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'country' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearCountry() {
      country = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'province' field.
      * @return The value.
      */
    public CharSequence getProvince() {
      return province;
    }

    /**
      * Sets the value of the 'province' field.
      * @param value The value of 'province'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setProvince(CharSequence value) {
      validate(fields()[3], value);
      this.province = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'province' field has been set.
      * @return True if the 'province' field has been set, false otherwise.
      */
    public boolean hasProvince() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'province' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearProvince() {
      province = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'city' field.
      * @return The value.
      */
    public CharSequence getCity() {
      return city;
    }

    /**
      * Sets the value of the 'city' field.
      * @param value The value of 'city'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setCity(CharSequence value) {
      validate(fields()[4], value);
      this.city = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'city' field has been set.
      * @return True if the 'city' field has been set, false otherwise.
      */
    public boolean hasCity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'city' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearCity() {
      city = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'remote_user' field.
      * @return The value.
      */
    public CharSequence getRemoteUser() {
      return remote_user;
    }

    /**
      * Sets the value of the 'remote_user' field.
      * @param value The value of 'remote_user'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setRemoteUser(CharSequence value) {
      validate(fields()[5], value);
      this.remote_user = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'remote_user' field has been set.
      * @return True if the 'remote_user' field has been set, false otherwise.
      */
    public boolean hasRemoteUser() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'remote_user' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearRemoteUser() {
      remote_user = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public CharSequence getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setTime(CharSequence value) {
      validate(fields()[6], value);
      this.time = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearTime() {
      time = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'method' field.
      * @return The value.
      */
    public CharSequence getMethod() {
      return method;
    }

    /**
      * Sets the value of the 'method' field.
      * @param value The value of 'method'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setMethod(CharSequence value) {
      validate(fields()[7], value);
      this.method = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'method' field has been set.
      * @return True if the 'method' field has been set, false otherwise.
      */
    public boolean hasMethod() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'method' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearMethod() {
      method = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public CharSequence getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setUrl(CharSequence value) {
      validate(fields()[8], value);
      this.url = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearUrl() {
      url = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'params' field.
      * @return The value.
      */
    public CharSequence getParams() {
      return params;
    }

    /**
      * Sets the value of the 'params' field.
      * @param value The value of 'params'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setParams(CharSequence value) {
      validate(fields()[9], value);
      this.params = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'params' field has been set.
      * @return True if the 'params' field has been set, false otherwise.
      */
    public boolean hasParams() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'params' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearParams() {
      params = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'protocol' field.
      * @return The value.
      */
    public CharSequence getProtocol() {
      return protocol;
    }

    /**
      * Sets the value of the 'protocol' field.
      * @param value The value of 'protocol'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setProtocol(CharSequence value) {
      validate(fields()[10], value);
      this.protocol = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'protocol' field has been set.
      * @return True if the 'protocol' field has been set, false otherwise.
      */
    public boolean hasProtocol() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'protocol' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearProtocol() {
      protocol = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public Integer getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setStatus(int value) {
      validate(fields()[11], value);
      this.status = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearStatus() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'body_bytes_sent' field.
      * @return The value.
      */
    public CharSequence getBodyBytesSent() {
      return body_bytes_sent;
    }

    /**
      * Sets the value of the 'body_bytes_sent' field.
      * @param value The value of 'body_bytes_sent'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setBodyBytesSent(CharSequence value) {
      validate(fields()[12], value);
      this.body_bytes_sent = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'body_bytes_sent' field has been set.
      * @return True if the 'body_bytes_sent' field has been set, false otherwise.
      */
    public boolean hasBodyBytesSent() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'body_bytes_sent' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearBodyBytesSent() {
      body_bytes_sent = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'request_time' field.
      * @return The value.
      */
    public CharSequence getRequestTime() {
      return request_time;
    }

    /**
      * Sets the value of the 'request_time' field.
      * @param value The value of 'request_time'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setRequestTime(CharSequence value) {
      validate(fields()[13], value);
      this.request_time = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'request_time' field has been set.
      * @return True if the 'request_time' field has been set, false otherwise.
      */
    public boolean hasRequestTime() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'request_time' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearRequestTime() {
      request_time = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'upstream_response_time' field.
      * @return The value.
      */
    public CharSequence getUpstreamResponseTime() {
      return upstream_response_time;
    }

    /**
      * Sets the value of the 'upstream_response_time' field.
      * @param value The value of 'upstream_response_time'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setUpstreamResponseTime(CharSequence value) {
      validate(fields()[14], value);
      this.upstream_response_time = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'upstream_response_time' field has been set.
      * @return True if the 'upstream_response_time' field has been set, false otherwise.
      */
    public boolean hasUpstreamResponseTime() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'upstream_response_time' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearUpstreamResponseTime() {
      upstream_response_time = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'http_referer' field.
      * @return The value.
      */
    public CharSequence getHttpReferer() {
      return http_referer;
    }

    /**
      * Sets the value of the 'http_referer' field.
      * @param value The value of 'http_referer'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setHttpReferer(CharSequence value) {
      validate(fields()[15], value);
      this.http_referer = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'http_referer' field has been set.
      * @return True if the 'http_referer' field has been set, false otherwise.
      */
    public boolean hasHttpReferer() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'http_referer' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearHttpReferer() {
      http_referer = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'uid' field.
      * @return The value.
      */
    public Integer getUid() {
      return uid;
    }

    /**
      * Sets the value of the 'uid' field.
      * @param value The value of 'uid'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setUid(int value) {
      validate(fields()[16], value);
      this.uid = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'uid' field has been set.
      * @return True if the 'uid' field has been set, false otherwise.
      */
    public boolean hasUid() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'uid' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearUid() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'vid' field.
      * @return The value.
      */
    public CharSequence getVid() {
      return vid;
    }

    /**
      * Sets the value of the 'vid' field.
      * @param value The value of 'vid'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setVid(CharSequence value) {
      validate(fields()[17], value);
      this.vid = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'vid' field has been set.
      * @return True if the 'vid' field has been set, false otherwise.
      */
    public boolean hasVid() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'vid' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearVid() {
      vid = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'ovid' field.
      * @return The value.
      */
    public CharSequence getOvid() {
      return ovid;
    }

    /**
      * Sets the value of the 'ovid' field.
      * @param value The value of 'ovid'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setOvid(CharSequence value) {
      validate(fields()[18], value);
      this.ovid = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'ovid' field has been set.
      * @return True if the 'ovid' field has been set, false otherwise.
      */
    public boolean hasOvid() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'ovid' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearOvid() {
      ovid = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'did' field.
      * @return The value.
      */
    public CharSequence getDid() {
      return did;
    }

    /**
      * Sets the value of the 'did' field.
      * @param value The value of 'did'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setDid(CharSequence value) {
      validate(fields()[19], value);
      this.did = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'did' field has been set.
      * @return True if the 'did' field has been set, false otherwise.
      */
    public boolean hasDid() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'did' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearDid() {
      did = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'device_type' field.
      * @return The value.
      */
    public CharSequence getDeviceType() {
      return device_type;
    }

    /**
      * Sets the value of the 'device_type' field.
      * @param value The value of 'device_type'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setDeviceType(CharSequence value) {
      validate(fields()[20], value);
      this.device_type = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'device_type' field has been set.
      * @return True if the 'device_type' field has been set, false otherwise.
      */
    public boolean hasDeviceType() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'device_type' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearDeviceType() {
      device_type = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'app_version' field.
      * @return The value.
      */
    public CharSequence getAppVersion() {
      return app_version;
    }

    /**
      * Sets the value of the 'app_version' field.
      * @param value The value of 'app_version'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setAppVersion(CharSequence value) {
      validate(fields()[21], value);
      this.app_version = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'app_version' field has been set.
      * @return True if the 'app_version' field has been set, false otherwise.
      */
    public boolean hasAppVersion() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'app_version' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearAppVersion() {
      app_version = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_agent' field.
      * @return The value.
      */
    public CharSequence getUserAgent() {
      return user_agent;
    }

    /**
      * Sets the value of the 'user_agent' field.
      * @param value The value of 'user_agent'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setUserAgent(CharSequence value) {
      validate(fields()[22], value);
      this.user_agent = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'user_agent' field has been set.
      * @return True if the 'user_agent' field has been set, false otherwise.
      */
    public boolean hasUserAgent() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'user_agent' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearUserAgent() {
      user_agent = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'http_x_forwarded_for' field.
      * @return The value.
      */
    public CharSequence getHttpXForwardedFor() {
      return http_x_forwarded_for;
    }

    /**
      * Sets the value of the 'http_x_forwarded_for' field.
      * @param value The value of 'http_x_forwarded_for'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setHttpXForwardedFor(CharSequence value) {
      validate(fields()[23], value);
      this.http_x_forwarded_for = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'http_x_forwarded_for' field has been set.
      * @return True if the 'http_x_forwarded_for' field has been set, false otherwise.
      */
    public boolean hasHttpXForwardedFor() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'http_x_forwarded_for' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearHttpXForwardedFor() {
      http_x_forwarded_for = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'host' field.
      * @return The value.
      */
    public CharSequence getHost() {
      return host;
    }

    /**
      * Sets the value of the 'host' field.
      * @param value The value of 'host'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setHost(CharSequence value) {
      validate(fields()[24], value);
      this.host = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'host' field has been set.
      * @return True if the 'host' field has been set, false otherwise.
      */
    public boolean hasHost() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'host' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearHost() {
      host = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'day' field.
      * @return The value.
      */
    public Integer getDay() {
      return day;
    }

    /**
      * Sets the value of the 'day' field.
      * @param value The value of 'day'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setDay(int value) {
      validate(fields()[25], value);
      this.day = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'day' field has been set.
      * @return True if the 'day' field has been set, false otherwise.
      */
    public boolean hasDay() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'day' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearDay() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public CharSequence getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setSource(CharSequence value) {
      validate(fields()[26], value);
      this.source = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearSource() {
      source = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'beat_hostname' field.
      * @return The value.
      */
    public CharSequence getBeatHostname() {
      return beat_hostname;
    }

    /**
      * Sets the value of the 'beat_hostname' field.
      * @param value The value of 'beat_hostname'.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder setBeatHostname(CharSequence value) {
      validate(fields()[27], value);
      this.beat_hostname = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'beat_hostname' field has been set.
      * @return True if the 'beat_hostname' field has been set, false otherwise.
      */
    public boolean hasBeatHostname() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'beat_hostname' field.
      * @return This builder.
      */
    public com.hhz.ifttt.pojo.NginxLog.Builder clearBeatHostname() {
      beat_hostname = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public NginxLog build() {
      try {
        NginxLog record = new NginxLog();
        record.hash_value = fieldSetFlags()[0] ? this.hash_value : (CharSequence) defaultValue(fields()[0]);
        record.remote_addr = fieldSetFlags()[1] ? this.remote_addr : (CharSequence) defaultValue(fields()[1]);
        record.country = fieldSetFlags()[2] ? this.country : (CharSequence) defaultValue(fields()[2]);
        record.province = fieldSetFlags()[3] ? this.province : (CharSequence) defaultValue(fields()[3]);
        record.city = fieldSetFlags()[4] ? this.city : (CharSequence) defaultValue(fields()[4]);
        record.remote_user = fieldSetFlags()[5] ? this.remote_user : (CharSequence) defaultValue(fields()[5]);
        record.time = fieldSetFlags()[6] ? this.time : (CharSequence) defaultValue(fields()[6]);
        record.method = fieldSetFlags()[7] ? this.method : (CharSequence) defaultValue(fields()[7]);
        record.url = fieldSetFlags()[8] ? this.url : (CharSequence) defaultValue(fields()[8]);
        record.params = fieldSetFlags()[9] ? this.params : (CharSequence) defaultValue(fields()[9]);
        record.protocol = fieldSetFlags()[10] ? this.protocol : (CharSequence) defaultValue(fields()[10]);
        record.status = fieldSetFlags()[11] ? this.status : (Integer) defaultValue(fields()[11]);
        record.body_bytes_sent = fieldSetFlags()[12] ? this.body_bytes_sent : (CharSequence) defaultValue(fields()[12]);
        record.request_time = fieldSetFlags()[13] ? this.request_time : (CharSequence) defaultValue(fields()[13]);
        record.upstream_response_time = fieldSetFlags()[14] ? this.upstream_response_time : (CharSequence) defaultValue(fields()[14]);
        record.http_referer = fieldSetFlags()[15] ? this.http_referer : (CharSequence) defaultValue(fields()[15]);
        record.uid = fieldSetFlags()[16] ? this.uid : (Integer) defaultValue(fields()[16]);
        record.vid = fieldSetFlags()[17] ? this.vid : (CharSequence) defaultValue(fields()[17]);
        record.ovid = fieldSetFlags()[18] ? this.ovid : (CharSequence) defaultValue(fields()[18]);
        record.did = fieldSetFlags()[19] ? this.did : (CharSequence) defaultValue(fields()[19]);
        record.device_type = fieldSetFlags()[20] ? this.device_type : (CharSequence) defaultValue(fields()[20]);
        record.app_version = fieldSetFlags()[21] ? this.app_version : (CharSequence) defaultValue(fields()[21]);
        record.user_agent = fieldSetFlags()[22] ? this.user_agent : (CharSequence) defaultValue(fields()[22]);
        record.http_x_forwarded_for = fieldSetFlags()[23] ? this.http_x_forwarded_for : (CharSequence) defaultValue(fields()[23]);
        record.host = fieldSetFlags()[24] ? this.host : (CharSequence) defaultValue(fields()[24]);
        record.day = fieldSetFlags()[25] ? this.day : (Integer) defaultValue(fields()[25]);
        record.source = fieldSetFlags()[26] ? this.source : (CharSequence) defaultValue(fields()[26]);
        record.beat_hostname = fieldSetFlags()[27] ? this.beat_hostname : (CharSequence) defaultValue(fields()[27]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<NginxLog>
    WRITER$ = (org.apache.avro.io.DatumWriter<NginxLog>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<NginxLog>
    READER$ = (org.apache.avro.io.DatumReader<NginxLog>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
