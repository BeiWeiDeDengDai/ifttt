/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hhz.ifttt.pojo;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserAction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -9016295800756587786L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserAction\",\"namespace\":\"com.hhz.ifttt.pojo\",\"fields\":[{\"name\":\"data_source\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"uid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"time\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"did\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"obj_id\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"url\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"params\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"module_type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"category\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"obj_type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"part_name\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"last_source\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"act_from\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"keyword\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"act_params\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"banner_id\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"search_type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"line\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"str\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"properties\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"module\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"posisign\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"id\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"datas\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"device_type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"config_id\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"url_type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"display_source\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"page\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"index\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"reason_type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"reason\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"from_source\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"user_agent\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"push_id\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"author_id\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"user_type\",\"type\":\"string\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserAction> ENCODER =
      new BinaryMessageEncoder<UserAction>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserAction> DECODER =
      new BinaryMessageDecoder<UserAction>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<UserAction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<UserAction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<UserAction>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this UserAction to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a UserAction from a ByteBuffer. */
  public static UserAction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence data_source;
  @Deprecated public CharSequence uid;
  @Deprecated public CharSequence time;
  @Deprecated public CharSequence did;
  @Deprecated public CharSequence type;
  @Deprecated public CharSequence obj_id;
  @Deprecated public CharSequence url;
  @Deprecated public CharSequence params;
  @Deprecated public CharSequence module_type;
  @Deprecated public CharSequence category;
  @Deprecated public CharSequence obj_type;
  @Deprecated public CharSequence part_name;
  @Deprecated public CharSequence last_source;
  @Deprecated public CharSequence act_from;
  @Deprecated public CharSequence keyword;
  @Deprecated public CharSequence act_params;
  @Deprecated public CharSequence banner_id;
  @Deprecated public CharSequence search_type;
  @Deprecated public CharSequence line;
  @Deprecated public CharSequence str;
  @Deprecated public CharSequence properties;
  @Deprecated public CharSequence module;
  @Deprecated public CharSequence posisign;
  @Deprecated public CharSequence id;
  @Deprecated public CharSequence datas;
  @Deprecated public CharSequence device_type;
  @Deprecated public CharSequence config_id;
  @Deprecated public CharSequence url_type;
  @Deprecated public CharSequence display_source;
  @Deprecated public CharSequence page;
  @Deprecated public CharSequence index;
  @Deprecated public CharSequence reason_type;
  @Deprecated public CharSequence reason;
  @Deprecated public CharSequence from_source;
  @Deprecated public CharSequence user_agent;
  @Deprecated public CharSequence push_id;
  @Deprecated public CharSequence author_id;
  @Deprecated public CharSequence user_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserAction() {}

  /**
   * All-args constructor.
   * @param data_source The new value for data_source
   * @param uid The new value for uid
   * @param time The new value for time
   * @param did The new value for did
   * @param type The new value for type
   * @param obj_id The new value for obj_id
   * @param url The new value for url
   * @param params The new value for params
   * @param module_type The new value for module_type
   * @param category The new value for category
   * @param obj_type The new value for obj_type
   * @param part_name The new value for part_name
   * @param last_source The new value for last_source
   * @param act_from The new value for act_from
   * @param keyword The new value for keyword
   * @param act_params The new value for act_params
   * @param banner_id The new value for banner_id
   * @param search_type The new value for search_type
   * @param line The new value for line
   * @param str The new value for str
   * @param properties The new value for properties
   * @param module The new value for module
   * @param posisign The new value for posisign
   * @param id The new value for id
   * @param datas The new value for datas
   * @param device_type The new value for device_type
   * @param config_id The new value for config_id
   * @param url_type The new value for url_type
   * @param display_source The new value for display_source
   * @param page The new value for page
   * @param index The new value for index
   * @param reason_type The new value for reason_type
   * @param reason The new value for reason
   * @param from_source The new value for from_source
   * @param user_agent The new value for user_agent
   * @param push_id The new value for push_id
   * @param author_id The new value for author_id
   * @param user_type The new value for user_type
   */
  public UserAction(CharSequence data_source, CharSequence uid, CharSequence time, CharSequence did, CharSequence type, CharSequence obj_id, CharSequence url, CharSequence params, CharSequence module_type, CharSequence category, CharSequence obj_type, CharSequence part_name, CharSequence last_source, CharSequence act_from, CharSequence keyword, CharSequence act_params, CharSequence banner_id, CharSequence search_type, CharSequence line, CharSequence str, CharSequence properties, CharSequence module, CharSequence posisign, CharSequence id, CharSequence datas, CharSequence device_type, CharSequence config_id, CharSequence url_type, CharSequence display_source, CharSequence page, CharSequence index, CharSequence reason_type, CharSequence reason, CharSequence from_source, CharSequence user_agent, CharSequence push_id, CharSequence author_id, CharSequence user_type) {
    this.data_source = data_source;
    this.uid = uid;
    this.time = time;
    this.did = did;
    this.type = type;
    this.obj_id = obj_id;
    this.url = url;
    this.params = params;
    this.module_type = module_type;
    this.category = category;
    this.obj_type = obj_type;
    this.part_name = part_name;
    this.last_source = last_source;
    this.act_from = act_from;
    this.keyword = keyword;
    this.act_params = act_params;
    this.banner_id = banner_id;
    this.search_type = search_type;
    this.line = line;
    this.str = str;
    this.properties = properties;
    this.module = module;
    this.posisign = posisign;
    this.id = id;
    this.datas = datas;
    this.device_type = device_type;
    this.config_id = config_id;
    this.url_type = url_type;
    this.display_source = display_source;
    this.page = page;
    this.index = index;
    this.reason_type = reason_type;
    this.reason = reason;
    this.from_source = from_source;
    this.user_agent = user_agent;
    this.push_id = push_id;
    this.author_id = author_id;
    this.user_type = user_type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return data_source;
    case 1: return uid;
    case 2: return time;
    case 3: return did;
    case 4: return type;
    case 5: return obj_id;
    case 6: return url;
    case 7: return params;
    case 8: return module_type;
    case 9: return category;
    case 10: return obj_type;
    case 11: return part_name;
    case 12: return last_source;
    case 13: return act_from;
    case 14: return keyword;
    case 15: return act_params;
    case 16: return banner_id;
    case 17: return search_type;
    case 18: return line;
    case 19: return str;
    case 20: return properties;
    case 21: return module;
    case 22: return posisign;
    case 23: return id;
    case 24: return datas;
    case 25: return device_type;
    case 26: return config_id;
    case 27: return url_type;
    case 28: return display_source;
    case 29: return page;
    case 30: return index;
    case 31: return reason_type;
    case 32: return reason;
    case 33: return from_source;
    case 34: return user_agent;
    case 35: return push_id;
    case 36: return author_id;
    case 37: return user_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: data_source = (CharSequence)value$; break;
    case 1: uid = (CharSequence)value$; break;
    case 2: time = (CharSequence)value$; break;
    case 3: did = (CharSequence)value$; break;
    case 4: type = (CharSequence)value$; break;
    case 5: obj_id = (CharSequence)value$; break;
    case 6: url = (CharSequence)value$; break;
    case 7: params = (CharSequence)value$; break;
    case 8: module_type = (CharSequence)value$; break;
    case 9: category = (CharSequence)value$; break;
    case 10: obj_type = (CharSequence)value$; break;
    case 11: part_name = (CharSequence)value$; break;
    case 12: last_source = (CharSequence)value$; break;
    case 13: act_from = (CharSequence)value$; break;
    case 14: keyword = (CharSequence)value$; break;
    case 15: act_params = (CharSequence)value$; break;
    case 16: banner_id = (CharSequence)value$; break;
    case 17: search_type = (CharSequence)value$; break;
    case 18: line = (CharSequence)value$; break;
    case 19: str = (CharSequence)value$; break;
    case 20: properties = (CharSequence)value$; break;
    case 21: module = (CharSequence)value$; break;
    case 22: posisign = (CharSequence)value$; break;
    case 23: id = (CharSequence)value$; break;
    case 24: datas = (CharSequence)value$; break;
    case 25: device_type = (CharSequence)value$; break;
    case 26: config_id = (CharSequence)value$; break;
    case 27: url_type = (CharSequence)value$; break;
    case 28: display_source = (CharSequence)value$; break;
    case 29: page = (CharSequence)value$; break;
    case 30: index = (CharSequence)value$; break;
    case 31: reason_type = (CharSequence)value$; break;
    case 32: reason = (CharSequence)value$; break;
    case 33: from_source = (CharSequence)value$; break;
    case 34: user_agent = (CharSequence)value$; break;
    case 35: push_id = (CharSequence)value$; break;
    case 36: author_id = (CharSequence)value$; break;
    case 37: user_type = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'data_source' field.
   * @return The value of the 'data_source' field.
   */
  public CharSequence getDataSource() {
    return data_source;
  }

  /**
   * Sets the value of the 'data_source' field.
   * @param value the value to set.
   */
  public void setDataSource(CharSequence value) {
    this.data_source = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * @return The value of the 'uid' field.
   */
  public CharSequence getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * @param value the value to set.
   */
  public void setUid(CharSequence value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'time' field.
   * @return The value of the 'time' field.
   */
  public CharSequence getTime() {
    return time;
  }

  /**
   * Sets the value of the 'time' field.
   * @param value the value to set.
   */
  public void setTime(CharSequence value) {
    this.time = value;
  }

  /**
   * Gets the value of the 'did' field.
   * @return The value of the 'did' field.
   */
  public CharSequence getDid() {
    return did;
  }

  /**
   * Sets the value of the 'did' field.
   * @param value the value to set.
   */
  public void setDid(CharSequence value) {
    this.did = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public CharSequence getType() {
    return type;
  }

  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(CharSequence value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'obj_id' field.
   * @return The value of the 'obj_id' field.
   */
  public CharSequence getObjId() {
    return obj_id;
  }

  /**
   * Sets the value of the 'obj_id' field.
   * @param value the value to set.
   */
  public void setObjId(CharSequence value) {
    this.obj_id = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'params' field.
   * @return The value of the 'params' field.
   */
  public CharSequence getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * @param value the value to set.
   */
  public void setParams(CharSequence value) {
    this.params = value;
  }

  /**
   * Gets the value of the 'module_type' field.
   * @return The value of the 'module_type' field.
   */
  public CharSequence getModuleType() {
    return module_type;
  }

  /**
   * Sets the value of the 'module_type' field.
   * @param value the value to set.
   */
  public void setModuleType(CharSequence value) {
    this.module_type = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public CharSequence getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(CharSequence value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'obj_type' field.
   * @return The value of the 'obj_type' field.
   */
  public CharSequence getObjType() {
    return obj_type;
  }

  /**
   * Sets the value of the 'obj_type' field.
   * @param value the value to set.
   */
  public void setObjType(CharSequence value) {
    this.obj_type = value;
  }

  /**
   * Gets the value of the 'part_name' field.
   * @return The value of the 'part_name' field.
   */
  public CharSequence getPartName() {
    return part_name;
  }

  /**
   * Sets the value of the 'part_name' field.
   * @param value the value to set.
   */
  public void setPartName(CharSequence value) {
    this.part_name = value;
  }

  /**
   * Gets the value of the 'last_source' field.
   * @return The value of the 'last_source' field.
   */
  public CharSequence getLastSource() {
    return last_source;
  }

  /**
   * Sets the value of the 'last_source' field.
   * @param value the value to set.
   */
  public void setLastSource(CharSequence value) {
    this.last_source = value;
  }

  /**
   * Gets the value of the 'act_from' field.
   * @return The value of the 'act_from' field.
   */
  public CharSequence getActFrom() {
    return act_from;
  }

  /**
   * Sets the value of the 'act_from' field.
   * @param value the value to set.
   */
  public void setActFrom(CharSequence value) {
    this.act_from = value;
  }

  /**
   * Gets the value of the 'keyword' field.
   * @return The value of the 'keyword' field.
   */
  public CharSequence getKeyword() {
    return keyword;
  }

  /**
   * Sets the value of the 'keyword' field.
   * @param value the value to set.
   */
  public void setKeyword(CharSequence value) {
    this.keyword = value;
  }

  /**
   * Gets the value of the 'act_params' field.
   * @return The value of the 'act_params' field.
   */
  public CharSequence getActParams() {
    return act_params;
  }

  /**
   * Sets the value of the 'act_params' field.
   * @param value the value to set.
   */
  public void setActParams(CharSequence value) {
    this.act_params = value;
  }

  /**
   * Gets the value of the 'banner_id' field.
   * @return The value of the 'banner_id' field.
   */
  public CharSequence getBannerId() {
    return banner_id;
  }

  /**
   * Sets the value of the 'banner_id' field.
   * @param value the value to set.
   */
  public void setBannerId(CharSequence value) {
    this.banner_id = value;
  }

  /**
   * Gets the value of the 'search_type' field.
   * @return The value of the 'search_type' field.
   */
  public CharSequence getSearchType() {
    return search_type;
  }

  /**
   * Sets the value of the 'search_type' field.
   * @param value the value to set.
   */
  public void setSearchType(CharSequence value) {
    this.search_type = value;
  }

  /**
   * Gets the value of the 'line' field.
   * @return The value of the 'line' field.
   */
  public CharSequence getLine() {
    return line;
  }

  /**
   * Sets the value of the 'line' field.
   * @param value the value to set.
   */
  public void setLine(CharSequence value) {
    this.line = value;
  }

  /**
   * Gets the value of the 'str' field.
   * @return The value of the 'str' field.
   */
  public CharSequence getStr() {
    return str;
  }

  /**
   * Sets the value of the 'str' field.
   * @param value the value to set.
   */
  public void setStr(CharSequence value) {
    this.str = value;
  }

  /**
   * Gets the value of the 'properties' field.
   * @return The value of the 'properties' field.
   */
  public CharSequence getProperties() {
    return properties;
  }

  /**
   * Sets the value of the 'properties' field.
   * @param value the value to set.
   */
  public void setProperties(CharSequence value) {
    this.properties = value;
  }

  /**
   * Gets the value of the 'module' field.
   * @return The value of the 'module' field.
   */
  public CharSequence getModule() {
    return module;
  }

  /**
   * Sets the value of the 'module' field.
   * @param value the value to set.
   */
  public void setModule(CharSequence value) {
    this.module = value;
  }

  /**
   * Gets the value of the 'posisign' field.
   * @return The value of the 'posisign' field.
   */
  public CharSequence getPosisign() {
    return posisign;
  }

  /**
   * Sets the value of the 'posisign' field.
   * @param value the value to set.
   */
  public void setPosisign(CharSequence value) {
    this.posisign = value;
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public CharSequence getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'datas' field.
   * @return The value of the 'datas' field.
   */
  public CharSequence getDatas() {
    return datas;
  }

  /**
   * Sets the value of the 'datas' field.
   * @param value the value to set.
   */
  public void setDatas(CharSequence value) {
    this.datas = value;
  }

  /**
   * Gets the value of the 'device_type' field.
   * @return The value of the 'device_type' field.
   */
  public CharSequence getDeviceType() {
    return device_type;
  }

  /**
   * Sets the value of the 'device_type' field.
   * @param value the value to set.
   */
  public void setDeviceType(CharSequence value) {
    this.device_type = value;
  }

  /**
   * Gets the value of the 'config_id' field.
   * @return The value of the 'config_id' field.
   */
  public CharSequence getConfigId() {
    return config_id;
  }

  /**
   * Sets the value of the 'config_id' field.
   * @param value the value to set.
   */
  public void setConfigId(CharSequence value) {
    this.config_id = value;
  }

  /**
   * Gets the value of the 'url_type' field.
   * @return The value of the 'url_type' field.
   */
  public CharSequence getUrlType() {
    return url_type;
  }

  /**
   * Sets the value of the 'url_type' field.
   * @param value the value to set.
   */
  public void setUrlType(CharSequence value) {
    this.url_type = value;
  }

  /**
   * Gets the value of the 'display_source' field.
   * @return The value of the 'display_source' field.
   */
  public CharSequence getDisplaySource() {
    return display_source;
  }

  /**
   * Sets the value of the 'display_source' field.
   * @param value the value to set.
   */
  public void setDisplaySource(CharSequence value) {
    this.display_source = value;
  }

  /**
   * Gets the value of the 'page' field.
   * @return The value of the 'page' field.
   */
  public CharSequence getPage() {
    return page;
  }

  /**
   * Sets the value of the 'page' field.
   * @param value the value to set.
   */
  public void setPage(CharSequence value) {
    this.page = value;
  }

  /**
   * Gets the value of the 'index' field.
   * @return The value of the 'index' field.
   */
  public CharSequence getIndex() {
    return index;
  }

  /**
   * Sets the value of the 'index' field.
   * @param value the value to set.
   */
  public void setIndex(CharSequence value) {
    this.index = value;
  }

  /**
   * Gets the value of the 'reason_type' field.
   * @return The value of the 'reason_type' field.
   */
  public CharSequence getReasonType() {
    return reason_type;
  }

  /**
   * Sets the value of the 'reason_type' field.
   * @param value the value to set.
   */
  public void setReasonType(CharSequence value) {
    this.reason_type = value;
  }

  /**
   * Gets the value of the 'reason' field.
   * @return The value of the 'reason' field.
   */
  public CharSequence getReason() {
    return reason;
  }

  /**
   * Sets the value of the 'reason' field.
   * @param value the value to set.
   */
  public void setReason(CharSequence value) {
    this.reason = value;
  }

  /**
   * Gets the value of the 'from_source' field.
   * @return The value of the 'from_source' field.
   */
  public CharSequence getFromSource() {
    return from_source;
  }

  /**
   * Sets the value of the 'from_source' field.
   * @param value the value to set.
   */
  public void setFromSource(CharSequence value) {
    this.from_source = value;
  }

  /**
   * Gets the value of the 'user_agent' field.
   * @return The value of the 'user_agent' field.
   */
  public CharSequence getUserAgent() {
    return user_agent;
  }

  /**
   * Sets the value of the 'user_agent' field.
   * @param value the value to set.
   */
  public void setUserAgent(CharSequence value) {
    this.user_agent = value;
  }

  /**
   * Gets the value of the 'push_id' field.
   * @return The value of the 'push_id' field.
   */
  public CharSequence getPushId() {
    return push_id;
  }

  /**
   * Sets the value of the 'push_id' field.
   * @param value the value to set.
   */
  public void setPushId(CharSequence value) {
    this.push_id = value;
  }

  /**
   * Gets the value of the 'author_id' field.
   * @return The value of the 'author_id' field.
   */
  public CharSequence getAuthorId() {
    return author_id;
  }

  /**
   * Sets the value of the 'author_id' field.
   * @param value the value to set.
   */
  public void setAuthorId(CharSequence value) {
    this.author_id = value;
  }

  /**
   * Gets the value of the 'user_type' field.
   * @return The value of the 'user_type' field.
   */
  public CharSequence getUserType() {
    return user_type;
  }

  /**
   * Sets the value of the 'user_type' field.
   * @param value the value to set.
   */
  public void setUserType(CharSequence value) {
    this.user_type = value;
  }

  /**
   * Creates a new UserAction RecordBuilder.
   * @return A new UserAction RecordBuilder
   */
  public static UserAction.Builder newBuilder() {
    return new UserAction.Builder();
  }

  /**
   * Creates a new UserAction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserAction RecordBuilder
   */
  public static UserAction.Builder newBuilder(UserAction.Builder other) {
    return new UserAction.Builder(other);
  }

  /**
   * Creates a new UserAction RecordBuilder by copying an existing UserAction instance.
   * @param other The existing instance to copy.
   * @return A new UserAction RecordBuilder
   */
  public static UserAction.Builder newBuilder(UserAction other) {
    return new UserAction.Builder(other);
  }

  /**
   * RecordBuilder for UserAction instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserAction>
    implements org.apache.avro.data.RecordBuilder<UserAction> {

    private CharSequence data_source;
    private CharSequence uid;
    private CharSequence time;
    private CharSequence did;
    private CharSequence type;
    private CharSequence obj_id;
    private CharSequence url;
    private CharSequence params;
    private CharSequence module_type;
    private CharSequence category;
    private CharSequence obj_type;
    private CharSequence part_name;
    private CharSequence last_source;
    private CharSequence act_from;
    private CharSequence keyword;
    private CharSequence act_params;
    private CharSequence banner_id;
    private CharSequence search_type;
    private CharSequence line;
    private CharSequence str;
    private CharSequence properties;
    private CharSequence module;
    private CharSequence posisign;
    private CharSequence id;
    private CharSequence datas;
    private CharSequence device_type;
    private CharSequence config_id;
    private CharSequence url_type;
    private CharSequence display_source;
    private CharSequence page;
    private CharSequence index;
    private CharSequence reason_type;
    private CharSequence reason;
    private CharSequence from_source;
    private CharSequence user_agent;
    private CharSequence push_id;
    private CharSequence author_id;
    private CharSequence user_type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(UserAction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.data_source)) {
        this.data_source = data().deepCopy(fields()[0].schema(), other.data_source);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uid)) {
        this.uid = data().deepCopy(fields()[1].schema(), other.uid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.time)) {
        this.time = data().deepCopy(fields()[2].schema(), other.time);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.did)) {
        this.did = data().deepCopy(fields()[3].schema(), other.did);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[5].schema(), other.obj_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.url)) {
        this.url = data().deepCopy(fields()[6].schema(), other.url);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.params)) {
        this.params = data().deepCopy(fields()[7].schema(), other.params);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.module_type)) {
        this.module_type = data().deepCopy(fields()[8].schema(), other.module_type);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.category)) {
        this.category = data().deepCopy(fields()[9].schema(), other.category);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[10].schema(), other.obj_type);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.part_name)) {
        this.part_name = data().deepCopy(fields()[11].schema(), other.part_name);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.last_source)) {
        this.last_source = data().deepCopy(fields()[12].schema(), other.last_source);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.act_from)) {
        this.act_from = data().deepCopy(fields()[13].schema(), other.act_from);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.keyword)) {
        this.keyword = data().deepCopy(fields()[14].schema(), other.keyword);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.act_params)) {
        this.act_params = data().deepCopy(fields()[15].schema(), other.act_params);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.banner_id)) {
        this.banner_id = data().deepCopy(fields()[16].schema(), other.banner_id);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.search_type)) {
        this.search_type = data().deepCopy(fields()[17].schema(), other.search_type);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.line)) {
        this.line = data().deepCopy(fields()[18].schema(), other.line);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.str)) {
        this.str = data().deepCopy(fields()[19].schema(), other.str);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.properties)) {
        this.properties = data().deepCopy(fields()[20].schema(), other.properties);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.module)) {
        this.module = data().deepCopy(fields()[21].schema(), other.module);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.posisign)) {
        this.posisign = data().deepCopy(fields()[22].schema(), other.posisign);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.id)) {
        this.id = data().deepCopy(fields()[23].schema(), other.id);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.datas)) {
        this.datas = data().deepCopy(fields()[24].schema(), other.datas);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.device_type)) {
        this.device_type = data().deepCopy(fields()[25].schema(), other.device_type);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.config_id)) {
        this.config_id = data().deepCopy(fields()[26].schema(), other.config_id);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.url_type)) {
        this.url_type = data().deepCopy(fields()[27].schema(), other.url_type);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.display_source)) {
        this.display_source = data().deepCopy(fields()[28].schema(), other.display_source);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.page)) {
        this.page = data().deepCopy(fields()[29].schema(), other.page);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.index)) {
        this.index = data().deepCopy(fields()[30].schema(), other.index);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.reason_type)) {
        this.reason_type = data().deepCopy(fields()[31].schema(), other.reason_type);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.reason)) {
        this.reason = data().deepCopy(fields()[32].schema(), other.reason);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.from_source)) {
        this.from_source = data().deepCopy(fields()[33].schema(), other.from_source);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.user_agent)) {
        this.user_agent = data().deepCopy(fields()[34].schema(), other.user_agent);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.push_id)) {
        this.push_id = data().deepCopy(fields()[35].schema(), other.push_id);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.author_id)) {
        this.author_id = data().deepCopy(fields()[36].schema(), other.author_id);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.user_type)) {
        this.user_type = data().deepCopy(fields()[37].schema(), other.user_type);
        fieldSetFlags()[37] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing UserAction instance
     * @param other The existing instance to copy.
     */
    private Builder(UserAction other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.data_source)) {
        this.data_source = data().deepCopy(fields()[0].schema(), other.data_source);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.uid)) {
        this.uid = data().deepCopy(fields()[1].schema(), other.uid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.time)) {
        this.time = data().deepCopy(fields()[2].schema(), other.time);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.did)) {
        this.did = data().deepCopy(fields()[3].schema(), other.did);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.type)) {
        this.type = data().deepCopy(fields()[4].schema(), other.type);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[5].schema(), other.obj_id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.url)) {
        this.url = data().deepCopy(fields()[6].schema(), other.url);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.params)) {
        this.params = data().deepCopy(fields()[7].schema(), other.params);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.module_type)) {
        this.module_type = data().deepCopy(fields()[8].schema(), other.module_type);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.category)) {
        this.category = data().deepCopy(fields()[9].schema(), other.category);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[10].schema(), other.obj_type);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.part_name)) {
        this.part_name = data().deepCopy(fields()[11].schema(), other.part_name);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.last_source)) {
        this.last_source = data().deepCopy(fields()[12].schema(), other.last_source);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.act_from)) {
        this.act_from = data().deepCopy(fields()[13].schema(), other.act_from);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.keyword)) {
        this.keyword = data().deepCopy(fields()[14].schema(), other.keyword);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.act_params)) {
        this.act_params = data().deepCopy(fields()[15].schema(), other.act_params);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.banner_id)) {
        this.banner_id = data().deepCopy(fields()[16].schema(), other.banner_id);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.search_type)) {
        this.search_type = data().deepCopy(fields()[17].schema(), other.search_type);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.line)) {
        this.line = data().deepCopy(fields()[18].schema(), other.line);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.str)) {
        this.str = data().deepCopy(fields()[19].schema(), other.str);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.properties)) {
        this.properties = data().deepCopy(fields()[20].schema(), other.properties);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.module)) {
        this.module = data().deepCopy(fields()[21].schema(), other.module);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.posisign)) {
        this.posisign = data().deepCopy(fields()[22].schema(), other.posisign);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.id)) {
        this.id = data().deepCopy(fields()[23].schema(), other.id);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.datas)) {
        this.datas = data().deepCopy(fields()[24].schema(), other.datas);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.device_type)) {
        this.device_type = data().deepCopy(fields()[25].schema(), other.device_type);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.config_id)) {
        this.config_id = data().deepCopy(fields()[26].schema(), other.config_id);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.url_type)) {
        this.url_type = data().deepCopy(fields()[27].schema(), other.url_type);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.display_source)) {
        this.display_source = data().deepCopy(fields()[28].schema(), other.display_source);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.page)) {
        this.page = data().deepCopy(fields()[29].schema(), other.page);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.index)) {
        this.index = data().deepCopy(fields()[30].schema(), other.index);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.reason_type)) {
        this.reason_type = data().deepCopy(fields()[31].schema(), other.reason_type);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.reason)) {
        this.reason = data().deepCopy(fields()[32].schema(), other.reason);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.from_source)) {
        this.from_source = data().deepCopy(fields()[33].schema(), other.from_source);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.user_agent)) {
        this.user_agent = data().deepCopy(fields()[34].schema(), other.user_agent);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.push_id)) {
        this.push_id = data().deepCopy(fields()[35].schema(), other.push_id);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.author_id)) {
        this.author_id = data().deepCopy(fields()[36].schema(), other.author_id);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.user_type)) {
        this.user_type = data().deepCopy(fields()[37].schema(), other.user_type);
        fieldSetFlags()[37] = true;
      }
    }

    /**
      * Gets the value of the 'data_source' field.
      * @return The value.
      */
    public CharSequence getDataSource() {
      return data_source;
    }

    /**
      * Sets the value of the 'data_source' field.
      * @param value The value of 'data_source'.
      * @return This builder.
      */
    public UserAction.Builder setDataSource(CharSequence value) {
      validate(fields()[0], value);
      this.data_source = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'data_source' field has been set.
      * @return True if the 'data_source' field has been set, false otherwise.
      */
    public boolean hasDataSource() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'data_source' field.
      * @return This builder.
      */
    public UserAction.Builder clearDataSource() {
      data_source = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'uid' field.
      * @return The value.
      */
    public CharSequence getUid() {
      return uid;
    }

    /**
      * Sets the value of the 'uid' field.
      * @param value The value of 'uid'.
      * @return This builder.
      */
    public UserAction.Builder setUid(CharSequence value) {
      validate(fields()[1], value);
      this.uid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'uid' field has been set.
      * @return True if the 'uid' field has been set, false otherwise.
      */
    public boolean hasUid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'uid' field.
      * @return This builder.
      */
    public UserAction.Builder clearUid() {
      uid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'time' field.
      * @return The value.
      */
    public CharSequence getTime() {
      return time;
    }

    /**
      * Sets the value of the 'time' field.
      * @param value The value of 'time'.
      * @return This builder.
      */
    public UserAction.Builder setTime(CharSequence value) {
      validate(fields()[2], value);
      this.time = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'time' field has been set.
      * @return True if the 'time' field has been set, false otherwise.
      */
    public boolean hasTime() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'time' field.
      * @return This builder.
      */
    public UserAction.Builder clearTime() {
      time = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'did' field.
      * @return The value.
      */
    public CharSequence getDid() {
      return did;
    }

    /**
      * Sets the value of the 'did' field.
      * @param value The value of 'did'.
      * @return This builder.
      */
    public UserAction.Builder setDid(CharSequence value) {
      validate(fields()[3], value);
      this.did = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'did' field has been set.
      * @return True if the 'did' field has been set, false otherwise.
      */
    public boolean hasDid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'did' field.
      * @return This builder.
      */
    public UserAction.Builder clearDid() {
      did = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public CharSequence getType() {
      return type;
    }

    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public UserAction.Builder setType(CharSequence value) {
      validate(fields()[4], value);
      this.type = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public UserAction.Builder clearType() {
      type = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_id' field.
      * @return The value.
      */
    public CharSequence getObjId() {
      return obj_id;
    }

    /**
      * Sets the value of the 'obj_id' field.
      * @param value The value of 'obj_id'.
      * @return This builder.
      */
    public UserAction.Builder setObjId(CharSequence value) {
      validate(fields()[5], value);
      this.obj_id = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_id' field has been set.
      * @return True if the 'obj_id' field has been set, false otherwise.
      */
    public boolean hasObjId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'obj_id' field.
      * @return This builder.
      */
    public UserAction.Builder clearObjId() {
      obj_id = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public CharSequence getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public UserAction.Builder setUrl(CharSequence value) {
      validate(fields()[6], value);
      this.url = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public UserAction.Builder clearUrl() {
      url = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'params' field.
      * @return The value.
      */
    public CharSequence getParams() {
      return params;
    }

    /**
      * Sets the value of the 'params' field.
      * @param value The value of 'params'.
      * @return This builder.
      */
    public UserAction.Builder setParams(CharSequence value) {
      validate(fields()[7], value);
      this.params = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'params' field has been set.
      * @return True if the 'params' field has been set, false otherwise.
      */
    public boolean hasParams() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'params' field.
      * @return This builder.
      */
    public UserAction.Builder clearParams() {
      params = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'module_type' field.
      * @return The value.
      */
    public CharSequence getModuleType() {
      return module_type;
    }

    /**
      * Sets the value of the 'module_type' field.
      * @param value The value of 'module_type'.
      * @return This builder.
      */
    public UserAction.Builder setModuleType(CharSequence value) {
      validate(fields()[8], value);
      this.module_type = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'module_type' field has been set.
      * @return True if the 'module_type' field has been set, false otherwise.
      */
    public boolean hasModuleType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'module_type' field.
      * @return This builder.
      */
    public UserAction.Builder clearModuleType() {
      module_type = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public CharSequence getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public UserAction.Builder setCategory(CharSequence value) {
      validate(fields()[9], value);
      this.category = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public UserAction.Builder clearCategory() {
      category = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_type' field.
      * @return The value.
      */
    public CharSequence getObjType() {
      return obj_type;
    }

    /**
      * Sets the value of the 'obj_type' field.
      * @param value The value of 'obj_type'.
      * @return This builder.
      */
    public UserAction.Builder setObjType(CharSequence value) {
      validate(fields()[10], value);
      this.obj_type = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_type' field has been set.
      * @return True if the 'obj_type' field has been set, false otherwise.
      */
    public boolean hasObjType() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'obj_type' field.
      * @return This builder.
      */
    public UserAction.Builder clearObjType() {
      obj_type = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'part_name' field.
      * @return The value.
      */
    public CharSequence getPartName() {
      return part_name;
    }

    /**
      * Sets the value of the 'part_name' field.
      * @param value The value of 'part_name'.
      * @return This builder.
      */
    public UserAction.Builder setPartName(CharSequence value) {
      validate(fields()[11], value);
      this.part_name = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'part_name' field has been set.
      * @return True if the 'part_name' field has been set, false otherwise.
      */
    public boolean hasPartName() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'part_name' field.
      * @return This builder.
      */
    public UserAction.Builder clearPartName() {
      part_name = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'last_source' field.
      * @return The value.
      */
    public CharSequence getLastSource() {
      return last_source;
    }

    /**
      * Sets the value of the 'last_source' field.
      * @param value The value of 'last_source'.
      * @return This builder.
      */
    public UserAction.Builder setLastSource(CharSequence value) {
      validate(fields()[12], value);
      this.last_source = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'last_source' field has been set.
      * @return True if the 'last_source' field has been set, false otherwise.
      */
    public boolean hasLastSource() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'last_source' field.
      * @return This builder.
      */
    public UserAction.Builder clearLastSource() {
      last_source = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'act_from' field.
      * @return The value.
      */
    public CharSequence getActFrom() {
      return act_from;
    }

    /**
      * Sets the value of the 'act_from' field.
      * @param value The value of 'act_from'.
      * @return This builder.
      */
    public UserAction.Builder setActFrom(CharSequence value) {
      validate(fields()[13], value);
      this.act_from = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'act_from' field has been set.
      * @return True if the 'act_from' field has been set, false otherwise.
      */
    public boolean hasActFrom() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'act_from' field.
      * @return This builder.
      */
    public UserAction.Builder clearActFrom() {
      act_from = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'keyword' field.
      * @return The value.
      */
    public CharSequence getKeyword() {
      return keyword;
    }

    /**
      * Sets the value of the 'keyword' field.
      * @param value The value of 'keyword'.
      * @return This builder.
      */
    public UserAction.Builder setKeyword(CharSequence value) {
      validate(fields()[14], value);
      this.keyword = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'keyword' field has been set.
      * @return True if the 'keyword' field has been set, false otherwise.
      */
    public boolean hasKeyword() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'keyword' field.
      * @return This builder.
      */
    public UserAction.Builder clearKeyword() {
      keyword = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'act_params' field.
      * @return The value.
      */
    public CharSequence getActParams() {
      return act_params;
    }

    /**
      * Sets the value of the 'act_params' field.
      * @param value The value of 'act_params'.
      * @return This builder.
      */
    public UserAction.Builder setActParams(CharSequence value) {
      validate(fields()[15], value);
      this.act_params = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'act_params' field has been set.
      * @return True if the 'act_params' field has been set, false otherwise.
      */
    public boolean hasActParams() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'act_params' field.
      * @return This builder.
      */
    public UserAction.Builder clearActParams() {
      act_params = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'banner_id' field.
      * @return The value.
      */
    public CharSequence getBannerId() {
      return banner_id;
    }

    /**
      * Sets the value of the 'banner_id' field.
      * @param value The value of 'banner_id'.
      * @return This builder.
      */
    public UserAction.Builder setBannerId(CharSequence value) {
      validate(fields()[16], value);
      this.banner_id = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'banner_id' field has been set.
      * @return True if the 'banner_id' field has been set, false otherwise.
      */
    public boolean hasBannerId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'banner_id' field.
      * @return This builder.
      */
    public UserAction.Builder clearBannerId() {
      banner_id = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'search_type' field.
      * @return The value.
      */
    public CharSequence getSearchType() {
      return search_type;
    }

    /**
      * Sets the value of the 'search_type' field.
      * @param value The value of 'search_type'.
      * @return This builder.
      */
    public UserAction.Builder setSearchType(CharSequence value) {
      validate(fields()[17], value);
      this.search_type = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'search_type' field has been set.
      * @return True if the 'search_type' field has been set, false otherwise.
      */
    public boolean hasSearchType() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'search_type' field.
      * @return This builder.
      */
    public UserAction.Builder clearSearchType() {
      search_type = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'line' field.
      * @return The value.
      */
    public CharSequence getLine() {
      return line;
    }

    /**
      * Sets the value of the 'line' field.
      * @param value The value of 'line'.
      * @return This builder.
      */
    public UserAction.Builder setLine(CharSequence value) {
      validate(fields()[18], value);
      this.line = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'line' field has been set.
      * @return True if the 'line' field has been set, false otherwise.
      */
    public boolean hasLine() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'line' field.
      * @return This builder.
      */
    public UserAction.Builder clearLine() {
      line = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'str' field.
      * @return The value.
      */
    public CharSequence getStr() {
      return str;
    }

    /**
      * Sets the value of the 'str' field.
      * @param value The value of 'str'.
      * @return This builder.
      */
    public UserAction.Builder setStr(CharSequence value) {
      validate(fields()[19], value);
      this.str = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'str' field has been set.
      * @return True if the 'str' field has been set, false otherwise.
      */
    public boolean hasStr() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'str' field.
      * @return This builder.
      */
    public UserAction.Builder clearStr() {
      str = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'properties' field.
      * @return The value.
      */
    public CharSequence getProperties() {
      return properties;
    }

    /**
      * Sets the value of the 'properties' field.
      * @param value The value of 'properties'.
      * @return This builder.
      */
    public UserAction.Builder setProperties(CharSequence value) {
      validate(fields()[20], value);
      this.properties = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'properties' field has been set.
      * @return True if the 'properties' field has been set, false otherwise.
      */
    public boolean hasProperties() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'properties' field.
      * @return This builder.
      */
    public UserAction.Builder clearProperties() {
      properties = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'module' field.
      * @return The value.
      */
    public CharSequence getModule() {
      return module;
    }

    /**
      * Sets the value of the 'module' field.
      * @param value The value of 'module'.
      * @return This builder.
      */
    public UserAction.Builder setModule(CharSequence value) {
      validate(fields()[21], value);
      this.module = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'module' field has been set.
      * @return True if the 'module' field has been set, false otherwise.
      */
    public boolean hasModule() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'module' field.
      * @return This builder.
      */
    public UserAction.Builder clearModule() {
      module = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'posisign' field.
      * @return The value.
      */
    public CharSequence getPosisign() {
      return posisign;
    }

    /**
      * Sets the value of the 'posisign' field.
      * @param value The value of 'posisign'.
      * @return This builder.
      */
    public UserAction.Builder setPosisign(CharSequence value) {
      validate(fields()[22], value);
      this.posisign = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'posisign' field has been set.
      * @return True if the 'posisign' field has been set, false otherwise.
      */
    public boolean hasPosisign() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'posisign' field.
      * @return This builder.
      */
    public UserAction.Builder clearPosisign() {
      posisign = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public CharSequence getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public UserAction.Builder setId(CharSequence value) {
      validate(fields()[23], value);
      this.id = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public UserAction.Builder clearId() {
      id = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'datas' field.
      * @return The value.
      */
    public CharSequence getDatas() {
      return datas;
    }

    /**
      * Sets the value of the 'datas' field.
      * @param value The value of 'datas'.
      * @return This builder.
      */
    public UserAction.Builder setDatas(CharSequence value) {
      validate(fields()[24], value);
      this.datas = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'datas' field has been set.
      * @return True if the 'datas' field has been set, false otherwise.
      */
    public boolean hasDatas() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'datas' field.
      * @return This builder.
      */
    public UserAction.Builder clearDatas() {
      datas = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'device_type' field.
      * @return The value.
      */
    public CharSequence getDeviceType() {
      return device_type;
    }

    /**
      * Sets the value of the 'device_type' field.
      * @param value The value of 'device_type'.
      * @return This builder.
      */
    public UserAction.Builder setDeviceType(CharSequence value) {
      validate(fields()[25], value);
      this.device_type = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'device_type' field has been set.
      * @return True if the 'device_type' field has been set, false otherwise.
      */
    public boolean hasDeviceType() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'device_type' field.
      * @return This builder.
      */
    public UserAction.Builder clearDeviceType() {
      device_type = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'config_id' field.
      * @return The value.
      */
    public CharSequence getConfigId() {
      return config_id;
    }

    /**
      * Sets the value of the 'config_id' field.
      * @param value The value of 'config_id'.
      * @return This builder.
      */
    public UserAction.Builder setConfigId(CharSequence value) {
      validate(fields()[26], value);
      this.config_id = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'config_id' field has been set.
      * @return True if the 'config_id' field has been set, false otherwise.
      */
    public boolean hasConfigId() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'config_id' field.
      * @return This builder.
      */
    public UserAction.Builder clearConfigId() {
      config_id = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'url_type' field.
      * @return The value.
      */
    public CharSequence getUrlType() {
      return url_type;
    }

    /**
      * Sets the value of the 'url_type' field.
      * @param value The value of 'url_type'.
      * @return This builder.
      */
    public UserAction.Builder setUrlType(CharSequence value) {
      validate(fields()[27], value);
      this.url_type = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'url_type' field has been set.
      * @return True if the 'url_type' field has been set, false otherwise.
      */
    public boolean hasUrlType() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'url_type' field.
      * @return This builder.
      */
    public UserAction.Builder clearUrlType() {
      url_type = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'display_source' field.
      * @return The value.
      */
    public CharSequence getDisplaySource() {
      return display_source;
    }

    /**
      * Sets the value of the 'display_source' field.
      * @param value The value of 'display_source'.
      * @return This builder.
      */
    public UserAction.Builder setDisplaySource(CharSequence value) {
      validate(fields()[28], value);
      this.display_source = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'display_source' field has been set.
      * @return True if the 'display_source' field has been set, false otherwise.
      */
    public boolean hasDisplaySource() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'display_source' field.
      * @return This builder.
      */
    public UserAction.Builder clearDisplaySource() {
      display_source = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'page' field.
      * @return The value.
      */
    public CharSequence getPage() {
      return page;
    }

    /**
      * Sets the value of the 'page' field.
      * @param value The value of 'page'.
      * @return This builder.
      */
    public UserAction.Builder setPage(CharSequence value) {
      validate(fields()[29], value);
      this.page = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'page' field has been set.
      * @return True if the 'page' field has been set, false otherwise.
      */
    public boolean hasPage() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'page' field.
      * @return This builder.
      */
    public UserAction.Builder clearPage() {
      page = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'index' field.
      * @return The value.
      */
    public CharSequence getIndex() {
      return index;
    }

    /**
      * Sets the value of the 'index' field.
      * @param value The value of 'index'.
      * @return This builder.
      */
    public UserAction.Builder setIndex(CharSequence value) {
      validate(fields()[30], value);
      this.index = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'index' field has been set.
      * @return True if the 'index' field has been set, false otherwise.
      */
    public boolean hasIndex() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'index' field.
      * @return This builder.
      */
    public UserAction.Builder clearIndex() {
      index = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'reason_type' field.
      * @return The value.
      */
    public CharSequence getReasonType() {
      return reason_type;
    }

    /**
      * Sets the value of the 'reason_type' field.
      * @param value The value of 'reason_type'.
      * @return This builder.
      */
    public UserAction.Builder setReasonType(CharSequence value) {
      validate(fields()[31], value);
      this.reason_type = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'reason_type' field has been set.
      * @return True if the 'reason_type' field has been set, false otherwise.
      */
    public boolean hasReasonType() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'reason_type' field.
      * @return This builder.
      */
    public UserAction.Builder clearReasonType() {
      reason_type = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'reason' field.
      * @return The value.
      */
    public CharSequence getReason() {
      return reason;
    }

    /**
      * Sets the value of the 'reason' field.
      * @param value The value of 'reason'.
      * @return This builder.
      */
    public UserAction.Builder setReason(CharSequence value) {
      validate(fields()[32], value);
      this.reason = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'reason' field has been set.
      * @return True if the 'reason' field has been set, false otherwise.
      */
    public boolean hasReason() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'reason' field.
      * @return This builder.
      */
    public UserAction.Builder clearReason() {
      reason = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'from_source' field.
      * @return The value.
      */
    public CharSequence getFromSource() {
      return from_source;
    }

    /**
      * Sets the value of the 'from_source' field.
      * @param value The value of 'from_source'.
      * @return This builder.
      */
    public UserAction.Builder setFromSource(CharSequence value) {
      validate(fields()[33], value);
      this.from_source = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'from_source' field has been set.
      * @return True if the 'from_source' field has been set, false otherwise.
      */
    public boolean hasFromSource() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'from_source' field.
      * @return This builder.
      */
    public UserAction.Builder clearFromSource() {
      from_source = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_agent' field.
      * @return The value.
      */
    public CharSequence getUserAgent() {
      return user_agent;
    }

    /**
      * Sets the value of the 'user_agent' field.
      * @param value The value of 'user_agent'.
      * @return This builder.
      */
    public UserAction.Builder setUserAgent(CharSequence value) {
      validate(fields()[34], value);
      this.user_agent = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'user_agent' field has been set.
      * @return True if the 'user_agent' field has been set, false otherwise.
      */
    public boolean hasUserAgent() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'user_agent' field.
      * @return This builder.
      */
    public UserAction.Builder clearUserAgent() {
      user_agent = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'push_id' field.
      * @return The value.
      */
    public CharSequence getPushId() {
      return push_id;
    }

    /**
      * Sets the value of the 'push_id' field.
      * @param value The value of 'push_id'.
      * @return This builder.
      */
    public UserAction.Builder setPushId(CharSequence value) {
      validate(fields()[35], value);
      this.push_id = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'push_id' field has been set.
      * @return True if the 'push_id' field has been set, false otherwise.
      */
    public boolean hasPushId() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'push_id' field.
      * @return This builder.
      */
    public UserAction.Builder clearPushId() {
      push_id = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'author_id' field.
      * @return The value.
      */
    public CharSequence getAuthorId() {
      return author_id;
    }

    /**
      * Sets the value of the 'author_id' field.
      * @param value The value of 'author_id'.
      * @return This builder.
      */
    public UserAction.Builder setAuthorId(CharSequence value) {
      validate(fields()[36], value);
      this.author_id = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'author_id' field has been set.
      * @return True if the 'author_id' field has been set, false otherwise.
      */
    public boolean hasAuthorId() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'author_id' field.
      * @return This builder.
      */
    public UserAction.Builder clearAuthorId() {
      author_id = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'user_type' field.
      * @return The value.
      */
    public CharSequence getUserType() {
      return user_type;
    }

    /**
      * Sets the value of the 'user_type' field.
      * @param value The value of 'user_type'.
      * @return This builder.
      */
    public UserAction.Builder setUserType(CharSequence value) {
      validate(fields()[37], value);
      this.user_type = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'user_type' field has been set.
      * @return True if the 'user_type' field has been set, false otherwise.
      */
    public boolean hasUserType() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'user_type' field.
      * @return This builder.
      */
    public UserAction.Builder clearUserType() {
      user_type = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserAction build() {
      try {
        UserAction record = new UserAction();
        record.data_source = fieldSetFlags()[0] ? this.data_source : (CharSequence) defaultValue(fields()[0]);
        record.uid = fieldSetFlags()[1] ? this.uid : (CharSequence) defaultValue(fields()[1]);
        record.time = fieldSetFlags()[2] ? this.time : (CharSequence) defaultValue(fields()[2]);
        record.did = fieldSetFlags()[3] ? this.did : (CharSequence) defaultValue(fields()[3]);
        record.type = fieldSetFlags()[4] ? this.type : (CharSequence) defaultValue(fields()[4]);
        record.obj_id = fieldSetFlags()[5] ? this.obj_id : (CharSequence) defaultValue(fields()[5]);
        record.url = fieldSetFlags()[6] ? this.url : (CharSequence) defaultValue(fields()[6]);
        record.params = fieldSetFlags()[7] ? this.params : (CharSequence) defaultValue(fields()[7]);
        record.module_type = fieldSetFlags()[8] ? this.module_type : (CharSequence) defaultValue(fields()[8]);
        record.category = fieldSetFlags()[9] ? this.category : (CharSequence) defaultValue(fields()[9]);
        record.obj_type = fieldSetFlags()[10] ? this.obj_type : (CharSequence) defaultValue(fields()[10]);
        record.part_name = fieldSetFlags()[11] ? this.part_name : (CharSequence) defaultValue(fields()[11]);
        record.last_source = fieldSetFlags()[12] ? this.last_source : (CharSequence) defaultValue(fields()[12]);
        record.act_from = fieldSetFlags()[13] ? this.act_from : (CharSequence) defaultValue(fields()[13]);
        record.keyword = fieldSetFlags()[14] ? this.keyword : (CharSequence) defaultValue(fields()[14]);
        record.act_params = fieldSetFlags()[15] ? this.act_params : (CharSequence) defaultValue(fields()[15]);
        record.banner_id = fieldSetFlags()[16] ? this.banner_id : (CharSequence) defaultValue(fields()[16]);
        record.search_type = fieldSetFlags()[17] ? this.search_type : (CharSequence) defaultValue(fields()[17]);
        record.line = fieldSetFlags()[18] ? this.line : (CharSequence) defaultValue(fields()[18]);
        record.str = fieldSetFlags()[19] ? this.str : (CharSequence) defaultValue(fields()[19]);
        record.properties = fieldSetFlags()[20] ? this.properties : (CharSequence) defaultValue(fields()[20]);
        record.module = fieldSetFlags()[21] ? this.module : (CharSequence) defaultValue(fields()[21]);
        record.posisign = fieldSetFlags()[22] ? this.posisign : (CharSequence) defaultValue(fields()[22]);
        record.id = fieldSetFlags()[23] ? this.id : (CharSequence) defaultValue(fields()[23]);
        record.datas = fieldSetFlags()[24] ? this.datas : (CharSequence) defaultValue(fields()[24]);
        record.device_type = fieldSetFlags()[25] ? this.device_type : (CharSequence) defaultValue(fields()[25]);
        record.config_id = fieldSetFlags()[26] ? this.config_id : (CharSequence) defaultValue(fields()[26]);
        record.url_type = fieldSetFlags()[27] ? this.url_type : (CharSequence) defaultValue(fields()[27]);
        record.display_source = fieldSetFlags()[28] ? this.display_source : (CharSequence) defaultValue(fields()[28]);
        record.page = fieldSetFlags()[29] ? this.page : (CharSequence) defaultValue(fields()[29]);
        record.index = fieldSetFlags()[30] ? this.index : (CharSequence) defaultValue(fields()[30]);
        record.reason_type = fieldSetFlags()[31] ? this.reason_type : (CharSequence) defaultValue(fields()[31]);
        record.reason = fieldSetFlags()[32] ? this.reason : (CharSequence) defaultValue(fields()[32]);
        record.from_source = fieldSetFlags()[33] ? this.from_source : (CharSequence) defaultValue(fields()[33]);
        record.user_agent = fieldSetFlags()[34] ? this.user_agent : (CharSequence) defaultValue(fields()[34]);
        record.push_id = fieldSetFlags()[35] ? this.push_id : (CharSequence) defaultValue(fields()[35]);
        record.author_id = fieldSetFlags()[36] ? this.author_id : (CharSequence) defaultValue(fields()[36]);
        record.user_type = fieldSetFlags()[37] ? this.user_type : (CharSequence) defaultValue(fields()[37]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserAction>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserAction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserAction>
    READER$ = (org.apache.avro.io.DatumReader<UserAction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
