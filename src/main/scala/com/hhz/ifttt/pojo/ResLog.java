/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.hhz.ifttt.pojo;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class ResLog extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3003489251085805668L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ResLog\",\"namespace\":\"com.hhz.ifttt.pojo\",\"fields\":[{\"name\":\"hashvalue\",\"type\":\"string\"},{\"name\":\"app\",\"type\":\"string\"},{\"name\":\"module_type\",\"type\":\"string\"},{\"name\":\"module\",\"type\":\"string\"},{\"name\":\"index\",\"type\":\"string\"},{\"name\":\"style\",\"type\":\"string\"},{\"name\":\"display_source\",\"type\":\"string\"},{\"name\":\"page\",\"type\":\"string\"},{\"name\":\"config_id\",\"type\":\"string\"},{\"name\":\"config_group\",\"type\":\"string\"},{\"name\":\"obj_uid\",\"type\":\"string\"},{\"name\":\"obj_id\",\"type\":\"string\"},{\"name\":\"day\",\"type\":\"int\"},{\"name\":\"obj_type\",\"type\":\"string\"},{\"name\":\"url_type\",\"type\":\"string\"},{\"name\":\"url\",\"type\":\"string\"},{\"name\":\"reason_type\",\"type\":\"string\"},{\"name\":\"reason\",\"type\":\"string\"},{\"name\":\"from_source\",\"type\":\"string\"},{\"name\":\"params\",\"type\":\"string\"},{\"name\":\"timestr\",\"type\":\"long\"},{\"name\":\"key_word\",\"type\":\"string\"},{\"name\":\"relate_obj_id\",\"type\":\"string\"},{\"name\":\"relate_obj_type\",\"type\":\"string\"},{\"name\":\"str\",\"type\":\"string\"},{\"name\":\"uid\",\"type\":\"string\"},{\"name\":\"datas\",\"type\":\"string\"},{\"name\":\"version\",\"type\":\"string\"},{\"name\":\"did\",\"type\":\"string\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"device_type\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ResLog> ENCODER =
      new BinaryMessageEncoder<ResLog>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ResLog> DECODER =
      new BinaryMessageDecoder<ResLog>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<ResLog> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<ResLog> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ResLog>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this ResLog to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a ResLog from a ByteBuffer. */
  public static ResLog fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence hashvalue;
  @Deprecated public CharSequence app;
  @Deprecated public CharSequence module_type;
  @Deprecated public CharSequence module;
  @Deprecated public CharSequence index;
  @Deprecated public CharSequence style;
  @Deprecated public CharSequence display_source;
  @Deprecated public CharSequence page;
  @Deprecated public CharSequence config_id;
  @Deprecated public CharSequence config_group;
  @Deprecated public CharSequence obj_uid;
  @Deprecated public CharSequence obj_id;
  @Deprecated public int day;
  @Deprecated public CharSequence obj_type;
  @Deprecated public CharSequence url_type;
  @Deprecated public CharSequence url;
  @Deprecated public CharSequence reason_type;
  @Deprecated public CharSequence reason;
  @Deprecated public CharSequence from_source;
  @Deprecated public CharSequence params;
  @Deprecated public long timestr;
  @Deprecated public CharSequence key_word;
  @Deprecated public CharSequence relate_obj_id;
  @Deprecated public CharSequence relate_obj_type;
  @Deprecated public CharSequence str;
  @Deprecated public CharSequence uid;
  @Deprecated public CharSequence datas;
  @Deprecated public CharSequence version;
  @Deprecated public CharSequence did;
  @Deprecated public CharSequence ip;
  @Deprecated public CharSequence device_type;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ResLog() {}

  /**
   * All-args constructor.
   * @param hashvalue The new value for hashvalue
   * @param app The new value for app
   * @param module_type The new value for module_type
   * @param module The new value for module
   * @param index The new value for index
   * @param style The new value for style
   * @param display_source The new value for display_source
   * @param page The new value for page
   * @param config_id The new value for config_id
   * @param config_group The new value for config_group
   * @param obj_uid The new value for obj_uid
   * @param obj_id The new value for obj_id
   * @param day The new value for day
   * @param obj_type The new value for obj_type
   * @param url_type The new value for url_type
   * @param url The new value for url
   * @param reason_type The new value for reason_type
   * @param reason The new value for reason
   * @param from_source The new value for from_source
   * @param params The new value for params
   * @param timestr The new value for timestr
   * @param key_word The new value for key_word
   * @param relate_obj_id The new value for relate_obj_id
   * @param relate_obj_type The new value for relate_obj_type
   * @param str The new value for str
   * @param uid The new value for uid
   * @param datas The new value for datas
   * @param version The new value for version
   * @param did The new value for did
   * @param ip The new value for ip
   * @param device_type The new value for device_type
   */
  public ResLog(CharSequence hashvalue, CharSequence app, CharSequence module_type, CharSequence module, CharSequence index, CharSequence style, CharSequence display_source, CharSequence page, CharSequence config_id, CharSequence config_group, CharSequence obj_uid, CharSequence obj_id, Integer day, CharSequence obj_type, CharSequence url_type, CharSequence url, CharSequence reason_type, CharSequence reason, CharSequence from_source, CharSequence params, Long timestr, CharSequence key_word, CharSequence relate_obj_id, CharSequence relate_obj_type, CharSequence str, CharSequence uid, CharSequence datas, CharSequence version, CharSequence did, CharSequence ip, CharSequence device_type) {
    this.hashvalue = hashvalue;
    this.app = app;
    this.module_type = module_type;
    this.module = module;
    this.index = index;
    this.style = style;
    this.display_source = display_source;
    this.page = page;
    this.config_id = config_id;
    this.config_group = config_group;
    this.obj_uid = obj_uid;
    this.obj_id = obj_id;
    this.day = day;
    this.obj_type = obj_type;
    this.url_type = url_type;
    this.url = url;
    this.reason_type = reason_type;
    this.reason = reason;
    this.from_source = from_source;
    this.params = params;
    this.timestr = timestr;
    this.key_word = key_word;
    this.relate_obj_id = relate_obj_id;
    this.relate_obj_type = relate_obj_type;
    this.str = str;
    this.uid = uid;
    this.datas = datas;
    this.version = version;
    this.did = did;
    this.ip = ip;
    this.device_type = device_type;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return hashvalue;
    case 1: return app;
    case 2: return module_type;
    case 3: return module;
    case 4: return index;
    case 5: return style;
    case 6: return display_source;
    case 7: return page;
    case 8: return config_id;
    case 9: return config_group;
    case 10: return obj_uid;
    case 11: return obj_id;
    case 12: return day;
    case 13: return obj_type;
    case 14: return url_type;
    case 15: return url;
    case 16: return reason_type;
    case 17: return reason;
    case 18: return from_source;
    case 19: return params;
    case 20: return timestr;
    case 21: return key_word;
    case 22: return relate_obj_id;
    case 23: return relate_obj_type;
    case 24: return str;
    case 25: return uid;
    case 26: return datas;
    case 27: return version;
    case 28: return did;
    case 29: return ip;
    case 30: return device_type;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: hashvalue = (CharSequence)value$; break;
    case 1: app = (CharSequence)value$; break;
    case 2: module_type = (CharSequence)value$; break;
    case 3: module = (CharSequence)value$; break;
    case 4: index = (CharSequence)value$; break;
    case 5: style = (CharSequence)value$; break;
    case 6: display_source = (CharSequence)value$; break;
    case 7: page = (CharSequence)value$; break;
    case 8: config_id = (CharSequence)value$; break;
    case 9: config_group = (CharSequence)value$; break;
    case 10: obj_uid = (CharSequence)value$; break;
    case 11: obj_id = (CharSequence)value$; break;
    case 12: day = (Integer)value$; break;
    case 13: obj_type = (CharSequence)value$; break;
    case 14: url_type = (CharSequence)value$; break;
    case 15: url = (CharSequence)value$; break;
    case 16: reason_type = (CharSequence)value$; break;
    case 17: reason = (CharSequence)value$; break;
    case 18: from_source = (CharSequence)value$; break;
    case 19: params = (CharSequence)value$; break;
    case 20: timestr = (Long)value$; break;
    case 21: key_word = (CharSequence)value$; break;
    case 22: relate_obj_id = (CharSequence)value$; break;
    case 23: relate_obj_type = (CharSequence)value$; break;
    case 24: str = (CharSequence)value$; break;
    case 25: uid = (CharSequence)value$; break;
    case 26: datas = (CharSequence)value$; break;
    case 27: version = (CharSequence)value$; break;
    case 28: did = (CharSequence)value$; break;
    case 29: ip = (CharSequence)value$; break;
    case 30: device_type = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'hashvalue' field.
   * @return The value of the 'hashvalue' field.
   */
  public CharSequence getHashvalue() {
    return hashvalue;
  }

  /**
   * Sets the value of the 'hashvalue' field.
   * @param value the value to set.
   */
  public void setHashvalue(CharSequence value) {
    this.hashvalue = value;
  }

  /**
   * Gets the value of the 'app' field.
   * @return The value of the 'app' field.
   */
  public CharSequence getApp() {
    return app;
  }

  /**
   * Sets the value of the 'app' field.
   * @param value the value to set.
   */
  public void setApp(CharSequence value) {
    this.app = value;
  }

  /**
   * Gets the value of the 'module_type' field.
   * @return The value of the 'module_type' field.
   */
  public CharSequence getModuleType() {
    return module_type;
  }

  /**
   * Sets the value of the 'module_type' field.
   * @param value the value to set.
   */
  public void setModuleType(CharSequence value) {
    this.module_type = value;
  }

  /**
   * Gets the value of the 'module' field.
   * @return The value of the 'module' field.
   */
  public CharSequence getModule() {
    return module;
  }

  /**
   * Sets the value of the 'module' field.
   * @param value the value to set.
   */
  public void setModule(CharSequence value) {
    this.module = value;
  }

  /**
   * Gets the value of the 'index' field.
   * @return The value of the 'index' field.
   */
  public CharSequence getIndex() {
    return index;
  }

  /**
   * Sets the value of the 'index' field.
   * @param value the value to set.
   */
  public void setIndex(CharSequence value) {
    this.index = value;
  }

  /**
   * Gets the value of the 'style' field.
   * @return The value of the 'style' field.
   */
  public CharSequence getStyle() {
    return style;
  }

  /**
   * Sets the value of the 'style' field.
   * @param value the value to set.
   */
  public void setStyle(CharSequence value) {
    this.style = value;
  }

  /**
   * Gets the value of the 'display_source' field.
   * @return The value of the 'display_source' field.
   */
  public CharSequence getDisplaySource() {
    return display_source;
  }

  /**
   * Sets the value of the 'display_source' field.
   * @param value the value to set.
   */
  public void setDisplaySource(CharSequence value) {
    this.display_source = value;
  }

  /**
   * Gets the value of the 'page' field.
   * @return The value of the 'page' field.
   */
  public CharSequence getPage() {
    return page;
  }

  /**
   * Sets the value of the 'page' field.
   * @param value the value to set.
   */
  public void setPage(CharSequence value) {
    this.page = value;
  }

  /**
   * Gets the value of the 'config_id' field.
   * @return The value of the 'config_id' field.
   */
  public CharSequence getConfigId() {
    return config_id;
  }

  /**
   * Sets the value of the 'config_id' field.
   * @param value the value to set.
   */
  public void setConfigId(CharSequence value) {
    this.config_id = value;
  }

  /**
   * Gets the value of the 'config_group' field.
   * @return The value of the 'config_group' field.
   */
  public CharSequence getConfigGroup() {
    return config_group;
  }

  /**
   * Sets the value of the 'config_group' field.
   * @param value the value to set.
   */
  public void setConfigGroup(CharSequence value) {
    this.config_group = value;
  }

  /**
   * Gets the value of the 'obj_uid' field.
   * @return The value of the 'obj_uid' field.
   */
  public CharSequence getObjUid() {
    return obj_uid;
  }

  /**
   * Sets the value of the 'obj_uid' field.
   * @param value the value to set.
   */
  public void setObjUid(CharSequence value) {
    this.obj_uid = value;
  }

  /**
   * Gets the value of the 'obj_id' field.
   * @return The value of the 'obj_id' field.
   */
  public CharSequence getObjId() {
    return obj_id;
  }

  /**
   * Sets the value of the 'obj_id' field.
   * @param value the value to set.
   */
  public void setObjId(CharSequence value) {
    this.obj_id = value;
  }

  /**
   * Gets the value of the 'day' field.
   * @return The value of the 'day' field.
   */
  public Integer getDay() {
    return day;
  }

  /**
   * Sets the value of the 'day' field.
   * @param value the value to set.
   */
  public void setDay(Integer value) {
    this.day = value;
  }

  /**
   * Gets the value of the 'obj_type' field.
   * @return The value of the 'obj_type' field.
   */
  public CharSequence getObjType() {
    return obj_type;
  }

  /**
   * Sets the value of the 'obj_type' field.
   * @param value the value to set.
   */
  public void setObjType(CharSequence value) {
    this.obj_type = value;
  }

  /**
   * Gets the value of the 'url_type' field.
   * @return The value of the 'url_type' field.
   */
  public CharSequence getUrlType() {
    return url_type;
  }

  /**
   * Sets the value of the 'url_type' field.
   * @param value the value to set.
   */
  public void setUrlType(CharSequence value) {
    this.url_type = value;
  }

  /**
   * Gets the value of the 'url' field.
   * @return The value of the 'url' field.
   */
  public CharSequence getUrl() {
    return url;
  }

  /**
   * Sets the value of the 'url' field.
   * @param value the value to set.
   */
  public void setUrl(CharSequence value) {
    this.url = value;
  }

  /**
   * Gets the value of the 'reason_type' field.
   * @return The value of the 'reason_type' field.
   */
  public CharSequence getReasonType() {
    return reason_type;
  }

  /**
   * Sets the value of the 'reason_type' field.
   * @param value the value to set.
   */
  public void setReasonType(CharSequence value) {
    this.reason_type = value;
  }

  /**
   * Gets the value of the 'reason' field.
   * @return The value of the 'reason' field.
   */
  public CharSequence getReason() {
    return reason;
  }

  /**
   * Sets the value of the 'reason' field.
   * @param value the value to set.
   */
  public void setReason(CharSequence value) {
    this.reason = value;
  }

  /**
   * Gets the value of the 'from_source' field.
   * @return The value of the 'from_source' field.
   */
  public CharSequence getFromSource() {
    return from_source;
  }

  /**
   * Sets the value of the 'from_source' field.
   * @param value the value to set.
   */
  public void setFromSource(CharSequence value) {
    this.from_source = value;
  }

  /**
   * Gets the value of the 'params' field.
   * @return The value of the 'params' field.
   */
  public CharSequence getParams() {
    return params;
  }

  /**
   * Sets the value of the 'params' field.
   * @param value the value to set.
   */
  public void setParams(CharSequence value) {
    this.params = value;
  }

  /**
   * Gets the value of the 'timestr' field.
   * @return The value of the 'timestr' field.
   */
  public Long getTimestr() {
    return timestr;
  }

  /**
   * Sets the value of the 'timestr' field.
   * @param value the value to set.
   */
  public void setTimestr(Long value) {
    this.timestr = value;
  }

  /**
   * Gets the value of the 'key_word' field.
   * @return The value of the 'key_word' field.
   */
  public CharSequence getKeyWord() {
    return key_word;
  }

  /**
   * Sets the value of the 'key_word' field.
   * @param value the value to set.
   */
  public void setKeyWord(CharSequence value) {
    this.key_word = value;
  }

  /**
   * Gets the value of the 'relate_obj_id' field.
   * @return The value of the 'relate_obj_id' field.
   */
  public CharSequence getRelateObjId() {
    return relate_obj_id;
  }

  /**
   * Sets the value of the 'relate_obj_id' field.
   * @param value the value to set.
   */
  public void setRelateObjId(CharSequence value) {
    this.relate_obj_id = value;
  }

  /**
   * Gets the value of the 'relate_obj_type' field.
   * @return The value of the 'relate_obj_type' field.
   */
  public CharSequence getRelateObjType() {
    return relate_obj_type;
  }

  /**
   * Sets the value of the 'relate_obj_type' field.
   * @param value the value to set.
   */
  public void setRelateObjType(CharSequence value) {
    this.relate_obj_type = value;
  }

  /**
   * Gets the value of the 'str' field.
   * @return The value of the 'str' field.
   */
  public CharSequence getStr() {
    return str;
  }

  /**
   * Sets the value of the 'str' field.
   * @param value the value to set.
   */
  public void setStr(CharSequence value) {
    this.str = value;
  }

  /**
   * Gets the value of the 'uid' field.
   * @return The value of the 'uid' field.
   */
  public CharSequence getUid() {
    return uid;
  }

  /**
   * Sets the value of the 'uid' field.
   * @param value the value to set.
   */
  public void setUid(CharSequence value) {
    this.uid = value;
  }

  /**
   * Gets the value of the 'datas' field.
   * @return The value of the 'datas' field.
   */
  public CharSequence getDatas() {
    return datas;
  }

  /**
   * Sets the value of the 'datas' field.
   * @param value the value to set.
   */
  public void setDatas(CharSequence value) {
    this.datas = value;
  }

  /**
   * Gets the value of the 'version' field.
   * @return The value of the 'version' field.
   */
  public CharSequence getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(CharSequence value) {
    this.version = value;
  }

  /**
   * Gets the value of the 'did' field.
   * @return The value of the 'did' field.
   */
  public CharSequence getDid() {
    return did;
  }

  /**
   * Sets the value of the 'did' field.
   * @param value the value to set.
   */
  public void setDid(CharSequence value) {
    this.did = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'device_type' field.
   * @return The value of the 'device_type' field.
   */
  public CharSequence getDeviceType() {
    return device_type;
  }

  /**
   * Sets the value of the 'device_type' field.
   * @param value the value to set.
   */
  public void setDeviceType(CharSequence value) {
    this.device_type = value;
  }

  /**
   * Creates a new ResLog RecordBuilder.
   * @return A new ResLog RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new ResLog RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ResLog RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new ResLog RecordBuilder by copying an existing ResLog instance.
   * @param other The existing instance to copy.
   * @return A new ResLog RecordBuilder
   */
  public static Builder newBuilder(ResLog other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for ResLog instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ResLog>
    implements org.apache.avro.data.RecordBuilder<ResLog> {

    private CharSequence hashvalue;
    private CharSequence app;
    private CharSequence module_type;
    private CharSequence module;
    private CharSequence index;
    private CharSequence style;
    private CharSequence display_source;
    private CharSequence page;
    private CharSequence config_id;
    private CharSequence config_group;
    private CharSequence obj_uid;
    private CharSequence obj_id;
    private int day;
    private CharSequence obj_type;
    private CharSequence url_type;
    private CharSequence url;
    private CharSequence reason_type;
    private CharSequence reason;
    private CharSequence from_source;
    private CharSequence params;
    private long timestr;
    private CharSequence key_word;
    private CharSequence relate_obj_id;
    private CharSequence relate_obj_type;
    private CharSequence str;
    private CharSequence uid;
    private CharSequence datas;
    private CharSequence version;
    private CharSequence did;
    private CharSequence ip;
    private CharSequence device_type;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.hashvalue)) {
        this.hashvalue = data().deepCopy(fields()[0].schema(), other.hashvalue);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.app)) {
        this.app = data().deepCopy(fields()[1].schema(), other.app);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.module_type)) {
        this.module_type = data().deepCopy(fields()[2].schema(), other.module_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.module)) {
        this.module = data().deepCopy(fields()[3].schema(), other.module);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.index)) {
        this.index = data().deepCopy(fields()[4].schema(), other.index);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.style)) {
        this.style = data().deepCopy(fields()[5].schema(), other.style);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.display_source)) {
        this.display_source = data().deepCopy(fields()[6].schema(), other.display_source);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.page)) {
        this.page = data().deepCopy(fields()[7].schema(), other.page);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.config_id)) {
        this.config_id = data().deepCopy(fields()[8].schema(), other.config_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.config_group)) {
        this.config_group = data().deepCopy(fields()[9].schema(), other.config_group);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.obj_uid)) {
        this.obj_uid = data().deepCopy(fields()[10].schema(), other.obj_uid);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[11].schema(), other.obj_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.day)) {
        this.day = data().deepCopy(fields()[12].schema(), other.day);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[13].schema(), other.obj_type);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.url_type)) {
        this.url_type = data().deepCopy(fields()[14].schema(), other.url_type);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.url)) {
        this.url = data().deepCopy(fields()[15].schema(), other.url);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.reason_type)) {
        this.reason_type = data().deepCopy(fields()[16].schema(), other.reason_type);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.reason)) {
        this.reason = data().deepCopy(fields()[17].schema(), other.reason);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.from_source)) {
        this.from_source = data().deepCopy(fields()[18].schema(), other.from_source);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.params)) {
        this.params = data().deepCopy(fields()[19].schema(), other.params);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.timestr)) {
        this.timestr = data().deepCopy(fields()[20].schema(), other.timestr);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.key_word)) {
        this.key_word = data().deepCopy(fields()[21].schema(), other.key_word);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.relate_obj_id)) {
        this.relate_obj_id = data().deepCopy(fields()[22].schema(), other.relate_obj_id);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.relate_obj_type)) {
        this.relate_obj_type = data().deepCopy(fields()[23].schema(), other.relate_obj_type);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.str)) {
        this.str = data().deepCopy(fields()[24].schema(), other.str);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.uid)) {
        this.uid = data().deepCopy(fields()[25].schema(), other.uid);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.datas)) {
        this.datas = data().deepCopy(fields()[26].schema(), other.datas);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.version)) {
        this.version = data().deepCopy(fields()[27].schema(), other.version);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.did)) {
        this.did = data().deepCopy(fields()[28].schema(), other.did);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.ip)) {
        this.ip = data().deepCopy(fields()[29].schema(), other.ip);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.device_type)) {
        this.device_type = data().deepCopy(fields()[30].schema(), other.device_type);
        fieldSetFlags()[30] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing ResLog instance
     * @param other The existing instance to copy.
     */
    private Builder(ResLog other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.hashvalue)) {
        this.hashvalue = data().deepCopy(fields()[0].schema(), other.hashvalue);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.app)) {
        this.app = data().deepCopy(fields()[1].schema(), other.app);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.module_type)) {
        this.module_type = data().deepCopy(fields()[2].schema(), other.module_type);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.module)) {
        this.module = data().deepCopy(fields()[3].schema(), other.module);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.index)) {
        this.index = data().deepCopy(fields()[4].schema(), other.index);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.style)) {
        this.style = data().deepCopy(fields()[5].schema(), other.style);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.display_source)) {
        this.display_source = data().deepCopy(fields()[6].schema(), other.display_source);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.page)) {
        this.page = data().deepCopy(fields()[7].schema(), other.page);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.config_id)) {
        this.config_id = data().deepCopy(fields()[8].schema(), other.config_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.config_group)) {
        this.config_group = data().deepCopy(fields()[9].schema(), other.config_group);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.obj_uid)) {
        this.obj_uid = data().deepCopy(fields()[10].schema(), other.obj_uid);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.obj_id)) {
        this.obj_id = data().deepCopy(fields()[11].schema(), other.obj_id);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.day)) {
        this.day = data().deepCopy(fields()[12].schema(), other.day);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.obj_type)) {
        this.obj_type = data().deepCopy(fields()[13].schema(), other.obj_type);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.url_type)) {
        this.url_type = data().deepCopy(fields()[14].schema(), other.url_type);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.url)) {
        this.url = data().deepCopy(fields()[15].schema(), other.url);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.reason_type)) {
        this.reason_type = data().deepCopy(fields()[16].schema(), other.reason_type);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.reason)) {
        this.reason = data().deepCopy(fields()[17].schema(), other.reason);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.from_source)) {
        this.from_source = data().deepCopy(fields()[18].schema(), other.from_source);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.params)) {
        this.params = data().deepCopy(fields()[19].schema(), other.params);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.timestr)) {
        this.timestr = data().deepCopy(fields()[20].schema(), other.timestr);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.key_word)) {
        this.key_word = data().deepCopy(fields()[21].schema(), other.key_word);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.relate_obj_id)) {
        this.relate_obj_id = data().deepCopy(fields()[22].schema(), other.relate_obj_id);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.relate_obj_type)) {
        this.relate_obj_type = data().deepCopy(fields()[23].schema(), other.relate_obj_type);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.str)) {
        this.str = data().deepCopy(fields()[24].schema(), other.str);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.uid)) {
        this.uid = data().deepCopy(fields()[25].schema(), other.uid);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.datas)) {
        this.datas = data().deepCopy(fields()[26].schema(), other.datas);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.version)) {
        this.version = data().deepCopy(fields()[27].schema(), other.version);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.did)) {
        this.did = data().deepCopy(fields()[28].schema(), other.did);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.ip)) {
        this.ip = data().deepCopy(fields()[29].schema(), other.ip);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.device_type)) {
        this.device_type = data().deepCopy(fields()[30].schema(), other.device_type);
        fieldSetFlags()[30] = true;
      }
    }

    /**
      * Gets the value of the 'hashvalue' field.
      * @return The value.
      */
    public CharSequence getHashvalue() {
      return hashvalue;
    }

    /**
      * Sets the value of the 'hashvalue' field.
      * @param value The value of 'hashvalue'.
      * @return This builder.
      */
    public Builder setHashvalue(CharSequence value) {
      validate(fields()[0], value);
      this.hashvalue = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'hashvalue' field has been set.
      * @return True if the 'hashvalue' field has been set, false otherwise.
      */
    public boolean hasHashvalue() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'hashvalue' field.
      * @return This builder.
      */
    public Builder clearHashvalue() {
      hashvalue = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'app' field.
      * @return The value.
      */
    public CharSequence getApp() {
      return app;
    }

    /**
      * Sets the value of the 'app' field.
      * @param value The value of 'app'.
      * @return This builder.
      */
    public Builder setApp(CharSequence value) {
      validate(fields()[1], value);
      this.app = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'app' field has been set.
      * @return True if the 'app' field has been set, false otherwise.
      */
    public boolean hasApp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'app' field.
      * @return This builder.
      */
    public Builder clearApp() {
      app = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'module_type' field.
      * @return The value.
      */
    public CharSequence getModuleType() {
      return module_type;
    }

    /**
      * Sets the value of the 'module_type' field.
      * @param value The value of 'module_type'.
      * @return This builder.
      */
    public Builder setModuleType(CharSequence value) {
      validate(fields()[2], value);
      this.module_type = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'module_type' field has been set.
      * @return True if the 'module_type' field has been set, false otherwise.
      */
    public boolean hasModuleType() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'module_type' field.
      * @return This builder.
      */
    public Builder clearModuleType() {
      module_type = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'module' field.
      * @return The value.
      */
    public CharSequence getModule() {
      return module;
    }

    /**
      * Sets the value of the 'module' field.
      * @param value The value of 'module'.
      * @return This builder.
      */
    public Builder setModule(CharSequence value) {
      validate(fields()[3], value);
      this.module = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'module' field has been set.
      * @return True if the 'module' field has been set, false otherwise.
      */
    public boolean hasModule() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'module' field.
      * @return This builder.
      */
    public Builder clearModule() {
      module = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'index' field.
      * @return The value.
      */
    public CharSequence getIndex() {
      return index;
    }

    /**
      * Sets the value of the 'index' field.
      * @param value The value of 'index'.
      * @return This builder.
      */
    public Builder setIndex(CharSequence value) {
      validate(fields()[4], value);
      this.index = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'index' field has been set.
      * @return True if the 'index' field has been set, false otherwise.
      */
    public boolean hasIndex() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'index' field.
      * @return This builder.
      */
    public Builder clearIndex() {
      index = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'style' field.
      * @return The value.
      */
    public CharSequence getStyle() {
      return style;
    }

    /**
      * Sets the value of the 'style' field.
      * @param value The value of 'style'.
      * @return This builder.
      */
    public Builder setStyle(CharSequence value) {
      validate(fields()[5], value);
      this.style = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'style' field has been set.
      * @return True if the 'style' field has been set, false otherwise.
      */
    public boolean hasStyle() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'style' field.
      * @return This builder.
      */
    public Builder clearStyle() {
      style = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'display_source' field.
      * @return The value.
      */
    public CharSequence getDisplaySource() {
      return display_source;
    }

    /**
      * Sets the value of the 'display_source' field.
      * @param value The value of 'display_source'.
      * @return This builder.
      */
    public Builder setDisplaySource(CharSequence value) {
      validate(fields()[6], value);
      this.display_source = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'display_source' field has been set.
      * @return True if the 'display_source' field has been set, false otherwise.
      */
    public boolean hasDisplaySource() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'display_source' field.
      * @return This builder.
      */
    public Builder clearDisplaySource() {
      display_source = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'page' field.
      * @return The value.
      */
    public CharSequence getPage() {
      return page;
    }

    /**
      * Sets the value of the 'page' field.
      * @param value The value of 'page'.
      * @return This builder.
      */
    public Builder setPage(CharSequence value) {
      validate(fields()[7], value);
      this.page = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'page' field has been set.
      * @return True if the 'page' field has been set, false otherwise.
      */
    public boolean hasPage() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'page' field.
      * @return This builder.
      */
    public Builder clearPage() {
      page = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'config_id' field.
      * @return The value.
      */
    public CharSequence getConfigId() {
      return config_id;
    }

    /**
      * Sets the value of the 'config_id' field.
      * @param value The value of 'config_id'.
      * @return This builder.
      */
    public Builder setConfigId(CharSequence value) {
      validate(fields()[8], value);
      this.config_id = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'config_id' field has been set.
      * @return True if the 'config_id' field has been set, false otherwise.
      */
    public boolean hasConfigId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'config_id' field.
      * @return This builder.
      */
    public Builder clearConfigId() {
      config_id = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'config_group' field.
      * @return The value.
      */
    public CharSequence getConfigGroup() {
      return config_group;
    }

    /**
      * Sets the value of the 'config_group' field.
      * @param value The value of 'config_group'.
      * @return This builder.
      */
    public Builder setConfigGroup(CharSequence value) {
      validate(fields()[9], value);
      this.config_group = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'config_group' field has been set.
      * @return True if the 'config_group' field has been set, false otherwise.
      */
    public boolean hasConfigGroup() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'config_group' field.
      * @return This builder.
      */
    public Builder clearConfigGroup() {
      config_group = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_uid' field.
      * @return The value.
      */
    public CharSequence getObjUid() {
      return obj_uid;
    }

    /**
      * Sets the value of the 'obj_uid' field.
      * @param value The value of 'obj_uid'.
      * @return This builder.
      */
    public Builder setObjUid(CharSequence value) {
      validate(fields()[10], value);
      this.obj_uid = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_uid' field has been set.
      * @return True if the 'obj_uid' field has been set, false otherwise.
      */
    public boolean hasObjUid() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'obj_uid' field.
      * @return This builder.
      */
    public Builder clearObjUid() {
      obj_uid = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_id' field.
      * @return The value.
      */
    public CharSequence getObjId() {
      return obj_id;
    }

    /**
      * Sets the value of the 'obj_id' field.
      * @param value The value of 'obj_id'.
      * @return This builder.
      */
    public Builder setObjId(CharSequence value) {
      validate(fields()[11], value);
      this.obj_id = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_id' field has been set.
      * @return True if the 'obj_id' field has been set, false otherwise.
      */
    public boolean hasObjId() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'obj_id' field.
      * @return This builder.
      */
    public Builder clearObjId() {
      obj_id = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'day' field.
      * @return The value.
      */
    public Integer getDay() {
      return day;
    }

    /**
      * Sets the value of the 'day' field.
      * @param value The value of 'day'.
      * @return This builder.
      */
    public Builder setDay(int value) {
      validate(fields()[12], value);
      this.day = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'day' field has been set.
      * @return True if the 'day' field has been set, false otherwise.
      */
    public boolean hasDay() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'day' field.
      * @return This builder.
      */
    public Builder clearDay() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'obj_type' field.
      * @return The value.
      */
    public CharSequence getObjType() {
      return obj_type;
    }

    /**
      * Sets the value of the 'obj_type' field.
      * @param value The value of 'obj_type'.
      * @return This builder.
      */
    public Builder setObjType(CharSequence value) {
      validate(fields()[13], value);
      this.obj_type = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'obj_type' field has been set.
      * @return True if the 'obj_type' field has been set, false otherwise.
      */
    public boolean hasObjType() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'obj_type' field.
      * @return This builder.
      */
    public Builder clearObjType() {
      obj_type = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'url_type' field.
      * @return The value.
      */
    public CharSequence getUrlType() {
      return url_type;
    }

    /**
      * Sets the value of the 'url_type' field.
      * @param value The value of 'url_type'.
      * @return This builder.
      */
    public Builder setUrlType(CharSequence value) {
      validate(fields()[14], value);
      this.url_type = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'url_type' field has been set.
      * @return True if the 'url_type' field has been set, false otherwise.
      */
    public boolean hasUrlType() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'url_type' field.
      * @return This builder.
      */
    public Builder clearUrlType() {
      url_type = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'url' field.
      * @return The value.
      */
    public CharSequence getUrl() {
      return url;
    }

    /**
      * Sets the value of the 'url' field.
      * @param value The value of 'url'.
      * @return This builder.
      */
    public Builder setUrl(CharSequence value) {
      validate(fields()[15], value);
      this.url = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'url' field has been set.
      * @return True if the 'url' field has been set, false otherwise.
      */
    public boolean hasUrl() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'url' field.
      * @return This builder.
      */
    public Builder clearUrl() {
      url = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'reason_type' field.
      * @return The value.
      */
    public CharSequence getReasonType() {
      return reason_type;
    }

    /**
      * Sets the value of the 'reason_type' field.
      * @param value The value of 'reason_type'.
      * @return This builder.
      */
    public Builder setReasonType(CharSequence value) {
      validate(fields()[16], value);
      this.reason_type = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'reason_type' field has been set.
      * @return True if the 'reason_type' field has been set, false otherwise.
      */
    public boolean hasReasonType() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'reason_type' field.
      * @return This builder.
      */
    public Builder clearReasonType() {
      reason_type = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'reason' field.
      * @return The value.
      */
    public CharSequence getReason() {
      return reason;
    }

    /**
      * Sets the value of the 'reason' field.
      * @param value The value of 'reason'.
      * @return This builder.
      */
    public Builder setReason(CharSequence value) {
      validate(fields()[17], value);
      this.reason = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'reason' field has been set.
      * @return True if the 'reason' field has been set, false otherwise.
      */
    public boolean hasReason() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'reason' field.
      * @return This builder.
      */
    public Builder clearReason() {
      reason = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'from_source' field.
      * @return The value.
      */
    public CharSequence getFromSource() {
      return from_source;
    }

    /**
      * Sets the value of the 'from_source' field.
      * @param value The value of 'from_source'.
      * @return This builder.
      */
    public Builder setFromSource(CharSequence value) {
      validate(fields()[18], value);
      this.from_source = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'from_source' field has been set.
      * @return True if the 'from_source' field has been set, false otherwise.
      */
    public boolean hasFromSource() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'from_source' field.
      * @return This builder.
      */
    public Builder clearFromSource() {
      from_source = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'params' field.
      * @return The value.
      */
    public CharSequence getParams() {
      return params;
    }

    /**
      * Sets the value of the 'params' field.
      * @param value The value of 'params'.
      * @return This builder.
      */
    public Builder setParams(CharSequence value) {
      validate(fields()[19], value);
      this.params = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'params' field has been set.
      * @return True if the 'params' field has been set, false otherwise.
      */
    public boolean hasParams() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'params' field.
      * @return This builder.
      */
    public Builder clearParams() {
      params = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestr' field.
      * @return The value.
      */
    public Long getTimestr() {
      return timestr;
    }

    /**
      * Sets the value of the 'timestr' field.
      * @param value The value of 'timestr'.
      * @return This builder.
      */
    public Builder setTimestr(long value) {
      validate(fields()[20], value);
      this.timestr = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'timestr' field has been set.
      * @return True if the 'timestr' field has been set, false otherwise.
      */
    public boolean hasTimestr() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'timestr' field.
      * @return This builder.
      */
    public Builder clearTimestr() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'key_word' field.
      * @return The value.
      */
    public CharSequence getKeyWord() {
      return key_word;
    }

    /**
      * Sets the value of the 'key_word' field.
      * @param value The value of 'key_word'.
      * @return This builder.
      */
    public Builder setKeyWord(CharSequence value) {
      validate(fields()[21], value);
      this.key_word = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'key_word' field has been set.
      * @return True if the 'key_word' field has been set, false otherwise.
      */
    public boolean hasKeyWord() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'key_word' field.
      * @return This builder.
      */
    public Builder clearKeyWord() {
      key_word = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'relate_obj_id' field.
      * @return The value.
      */
    public CharSequence getRelateObjId() {
      return relate_obj_id;
    }

    /**
      * Sets the value of the 'relate_obj_id' field.
      * @param value The value of 'relate_obj_id'.
      * @return This builder.
      */
    public Builder setRelateObjId(CharSequence value) {
      validate(fields()[22], value);
      this.relate_obj_id = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'relate_obj_id' field has been set.
      * @return True if the 'relate_obj_id' field has been set, false otherwise.
      */
    public boolean hasRelateObjId() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'relate_obj_id' field.
      * @return This builder.
      */
    public Builder clearRelateObjId() {
      relate_obj_id = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'relate_obj_type' field.
      * @return The value.
      */
    public CharSequence getRelateObjType() {
      return relate_obj_type;
    }

    /**
      * Sets the value of the 'relate_obj_type' field.
      * @param value The value of 'relate_obj_type'.
      * @return This builder.
      */
    public Builder setRelateObjType(CharSequence value) {
      validate(fields()[23], value);
      this.relate_obj_type = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'relate_obj_type' field has been set.
      * @return True if the 'relate_obj_type' field has been set, false otherwise.
      */
    public boolean hasRelateObjType() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'relate_obj_type' field.
      * @return This builder.
      */
    public Builder clearRelateObjType() {
      relate_obj_type = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'str' field.
      * @return The value.
      */
    public CharSequence getStr() {
      return str;
    }

    /**
      * Sets the value of the 'str' field.
      * @param value The value of 'str'.
      * @return This builder.
      */
    public Builder setStr(CharSequence value) {
      validate(fields()[24], value);
      this.str = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'str' field has been set.
      * @return True if the 'str' field has been set, false otherwise.
      */
    public boolean hasStr() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'str' field.
      * @return This builder.
      */
    public Builder clearStr() {
      str = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'uid' field.
      * @return The value.
      */
    public CharSequence getUid() {
      return uid;
    }

    /**
      * Sets the value of the 'uid' field.
      * @param value The value of 'uid'.
      * @return This builder.
      */
    public Builder setUid(CharSequence value) {
      validate(fields()[25], value);
      this.uid = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'uid' field has been set.
      * @return True if the 'uid' field has been set, false otherwise.
      */
    public boolean hasUid() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'uid' field.
      * @return This builder.
      */
    public Builder clearUid() {
      uid = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'datas' field.
      * @return The value.
      */
    public CharSequence getDatas() {
      return datas;
    }

    /**
      * Sets the value of the 'datas' field.
      * @param value The value of 'datas'.
      * @return This builder.
      */
    public Builder setDatas(CharSequence value) {
      validate(fields()[26], value);
      this.datas = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'datas' field has been set.
      * @return True if the 'datas' field has been set, false otherwise.
      */
    public boolean hasDatas() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'datas' field.
      * @return This builder.
      */
    public Builder clearDatas() {
      datas = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'version' field.
      * @return The value.
      */
    public CharSequence getVersion() {
      return version;
    }

    /**
      * Sets the value of the 'version' field.
      * @param value The value of 'version'.
      * @return This builder.
      */
    public Builder setVersion(CharSequence value) {
      validate(fields()[27], value);
      this.version = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'version' field has been set.
      * @return True if the 'version' field has been set, false otherwise.
      */
    public boolean hasVersion() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'version' field.
      * @return This builder.
      */
    public Builder clearVersion() {
      version = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'did' field.
      * @return The value.
      */
    public CharSequence getDid() {
      return did;
    }

    /**
      * Sets the value of the 'did' field.
      * @param value The value of 'did'.
      * @return This builder.
      */
    public Builder setDid(CharSequence value) {
      validate(fields()[28], value);
      this.did = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'did' field has been set.
      * @return True if the 'did' field has been set, false otherwise.
      */
    public boolean hasDid() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'did' field.
      * @return This builder.
      */
    public Builder clearDid() {
      did = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public Builder setIp(CharSequence value) {
      validate(fields()[29], value);
      this.ip = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public Builder clearIp() {
      ip = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'device_type' field.
      * @return The value.
      */
    public CharSequence getDeviceType() {
      return device_type;
    }

    /**
      * Sets the value of the 'device_type' field.
      * @param value The value of 'device_type'.
      * @return This builder.
      */
    public Builder setDeviceType(CharSequence value) {
      validate(fields()[30], value);
      this.device_type = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'device_type' field has been set.
      * @return True if the 'device_type' field has been set, false otherwise.
      */
    public boolean hasDeviceType() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'device_type' field.
      * @return This builder.
      */
    public Builder clearDeviceType() {
      device_type = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ResLog build() {
      try {
        ResLog record = new ResLog();
        record.hashvalue = fieldSetFlags()[0] ? this.hashvalue : (CharSequence) defaultValue(fields()[0]);
        record.app = fieldSetFlags()[1] ? this.app : (CharSequence) defaultValue(fields()[1]);
        record.module_type = fieldSetFlags()[2] ? this.module_type : (CharSequence) defaultValue(fields()[2]);
        record.module = fieldSetFlags()[3] ? this.module : (CharSequence) defaultValue(fields()[3]);
        record.index = fieldSetFlags()[4] ? this.index : (CharSequence) defaultValue(fields()[4]);
        record.style = fieldSetFlags()[5] ? this.style : (CharSequence) defaultValue(fields()[5]);
        record.display_source = fieldSetFlags()[6] ? this.display_source : (CharSequence) defaultValue(fields()[6]);
        record.page = fieldSetFlags()[7] ? this.page : (CharSequence) defaultValue(fields()[7]);
        record.config_id = fieldSetFlags()[8] ? this.config_id : (CharSequence) defaultValue(fields()[8]);
        record.config_group = fieldSetFlags()[9] ? this.config_group : (CharSequence) defaultValue(fields()[9]);
        record.obj_uid = fieldSetFlags()[10] ? this.obj_uid : (CharSequence) defaultValue(fields()[10]);
        record.obj_id = fieldSetFlags()[11] ? this.obj_id : (CharSequence) defaultValue(fields()[11]);
        record.day = fieldSetFlags()[12] ? this.day : (Integer) defaultValue(fields()[12]);
        record.obj_type = fieldSetFlags()[13] ? this.obj_type : (CharSequence) defaultValue(fields()[13]);
        record.url_type = fieldSetFlags()[14] ? this.url_type : (CharSequence) defaultValue(fields()[14]);
        record.url = fieldSetFlags()[15] ? this.url : (CharSequence) defaultValue(fields()[15]);
        record.reason_type = fieldSetFlags()[16] ? this.reason_type : (CharSequence) defaultValue(fields()[16]);
        record.reason = fieldSetFlags()[17] ? this.reason : (CharSequence) defaultValue(fields()[17]);
        record.from_source = fieldSetFlags()[18] ? this.from_source : (CharSequence) defaultValue(fields()[18]);
        record.params = fieldSetFlags()[19] ? this.params : (CharSequence) defaultValue(fields()[19]);
        record.timestr = fieldSetFlags()[20] ? this.timestr : (Long) defaultValue(fields()[20]);
        record.key_word = fieldSetFlags()[21] ? this.key_word : (CharSequence) defaultValue(fields()[21]);
        record.relate_obj_id = fieldSetFlags()[22] ? this.relate_obj_id : (CharSequence) defaultValue(fields()[22]);
        record.relate_obj_type = fieldSetFlags()[23] ? this.relate_obj_type : (CharSequence) defaultValue(fields()[23]);
        record.str = fieldSetFlags()[24] ? this.str : (CharSequence) defaultValue(fields()[24]);
        record.uid = fieldSetFlags()[25] ? this.uid : (CharSequence) defaultValue(fields()[25]);
        record.datas = fieldSetFlags()[26] ? this.datas : (CharSequence) defaultValue(fields()[26]);
        record.version = fieldSetFlags()[27] ? this.version : (CharSequence) defaultValue(fields()[27]);
        record.did = fieldSetFlags()[28] ? this.did : (CharSequence) defaultValue(fields()[28]);
        record.ip = fieldSetFlags()[29] ? this.ip : (CharSequence) defaultValue(fields()[29]);
        record.device_type = fieldSetFlags()[30] ? this.device_type : (CharSequence) defaultValue(fields()[30]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ResLog>
    WRITER$ = (org.apache.avro.io.DatumWriter<ResLog>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ResLog>
    READER$ = (org.apache.avro.io.DatumReader<ResLog>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
